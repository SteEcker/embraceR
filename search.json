[{"path":"https://steecker.github.io/embraceR/articles/getting-started.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting Started","text":"R (version 4.0 later) RStudio (optional recommended) Place data_raw folder contains necessary data files EMBRACE EMBRACE II root directory project.","code":""},{"path":"https://steecker.github.io/embraceR/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"","code":"# Install from GitHub if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"steecker/embraceR\")"},{"path":[]},{"path":"https://steecker.github.io/embraceR/articles/getting-started.html","id":"loading-data","dir":"Articles","previous_headings":"Basic Usage","what":"Loading Data","title":"Getting Started","text":"","code":"library(embraceR)  # Load EMBRACE I data data <- load_embrace_i()  # Load EMBRACE II data data <- load_embrace_ii()  # Load combined data data <- load_combined_embrace()"},{"path":"https://steecker.github.io/embraceR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Ecker. Author, maintainer.","code":""},{"path":"https://steecker.github.io/embraceR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ecker S (2025). embraceR: Data Processing Tools EMBRACE Studies. R package version 0.1.0, https://github.com/SteEcker/embraceR.","code":"@Manual{,   title = {embraceR: Data Processing Tools for EMBRACE Studies},   author = {Stefan Ecker},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/SteEcker/embraceR}, }"},{"path":"https://steecker.github.io/embraceR/index.html","id":"embracer-","dir":"","previous_headings":"","what":"Data Processing Tools for EMBRACE Studies","title":"Data Processing Tools for EMBRACE Studies","text":"comprehensive R package processing analyzing data EMBRACE-EMBRACE-II studies gynecological oncology.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Data Processing Tools for EMBRACE Studies","text":"embraceR streamlines analysis clinical outcomes data EMBRACE studies (Image-guided intensity-modulated External beam radiochemotherapy MRI-based adaptive BRAchytherapy locally advanced CErvical cancer). provides standardized workflows ensures consistent analysis approaches across research projects.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"id_️-data-access","dir":"","previous_headings":"","what":"⚠️ Data Access","title":"Data Processing Tools for EMBRACE Studies","text":"package contains analysis code - study data included. Data access provided participating centers researchers upon request.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Processing Tools for EMBRACE Studies","text":"","code":"# Install from GitHub if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"steecker/embraceR\")"},{"path":[]},{"path":"https://steecker.github.io/embraceR/index.html","id":"data-processing","dir":"","previous_headings":"Key Features","what":"Data Processing","title":"Data Processing Tools for EMBRACE Studies","text":"Standardized data loading EMBRACE & II Automated cleaning transformation Consistent variable naming conventions","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"clinical-analysis","dir":"","previous_headings":"Key Features","what":"Clinical Analysis","title":"Data Processing Tools for EMBRACE Studies","text":"Disease control endpoints Survival analysis tools Treatment response assessment Morbidity tracking","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"quality-of-life","dir":"","previous_headings":"Key Features","what":"Quality of Life","title":"Data Processing Tools for EMBRACE Studies","text":"EORTC questionnaire analysis Side effects monitoring Long-term follow-tools","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"reporting","dir":"","previous_headings":"Key Features","what":"Reporting","title":"Data Processing Tools for EMBRACE Studies","text":"Summary statistics generation Excel report creation Comparative outcome tables","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Processing Tools for EMBRACE Studies","text":"","code":"library(embraceR)  # Load and process EMBRACE II data data <- load_embrace_ii(   file_path = \"path/to/emii.xlsx\",   file_path_eqd2 = \"path/to/emii_eqd2.xlsx\" )"},{"path":[]},{"path":"https://steecker.github.io/embraceR/index.html","id":"core","dir":"","previous_headings":"Dependencies","what":"Core","title":"Data Processing Tools for EMBRACE Studies","text":"dplyr - Data manipulation tidyr - Data tidying purrr - Functional programming","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"data-importexport","dir":"","previous_headings":"Dependencies","what":"Data Import/Export","title":"Data Processing Tools for EMBRACE Studies","text":"readxl - Excel file reading openxlsx - Excel file writing haven - SPSS file reading","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"analysis--utilities","dir":"","previous_headings":"Dependencies","what":"Analysis & Utilities","title":"Data Processing Tools for EMBRACE Studies","text":"gtsummary - Summary tables lubridate - Date handling stringr - String manipulation glue - String interpolation janitor - Data cleaning - File path handling sjlabelled - Variable labeling","code":""},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":null,"dir":"Reference","previous_headings":"","what":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"Defines standard mapping numeric codes anatomical positions lymph nodes EMBRACE studies.","code":""},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"","code":"NODAL_POSITION_MAPPING"},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"object class character length 13.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Age to Data Frame — add_age","title":"Add Age to Data Frame — add_age","text":"function calculates age subjects data frame based year birth birth date date histology assessment. method calculation depends study specified data frame.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Age to Data Frame — add_age","text":"","code":"add_age(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Age to Data Frame — add_age","text":"df data frame containing columns `study`, `histology_assessment_date`, `birth_date_pat`, `year_of_birth`. `study` column used determine method age calculation. `histology_assessment_date` must date format `lubridate::year()` can recognize.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Age to Data Frame — add_age","text":"Returns input data frame additional column `age` contains   calculated age subjects.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Age to Data Frame — add_age","text":"","code":"df <- data.frame(   study = c(\"embrace_i\", \"other_study\"),   histology_assesment_date = as.Date(c(\"2024-01-01\", \"2024-01-02\")),   birth_date_pat = c(1980, NA),   year_of_birth = c(NA, 1990) ) df_with_age <- add_age(df) #> Warning: There was 1 warning in `dplyr::mutate()`. #> ℹ In argument: `age = lubridate::year(histology_assesment_date) - #>   lubridate::year(birth_date_pat)`. #> Caused by warning: #> ! tz(): Don't know how to compute timezone for object of class numeric; returning \"UTC\"."},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","title":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","text":"function takes data frame contains columns starting \"fraction\" containing \"active_needles\". calculates average number active needles row, rounds , adds new column data frame. average NaN, replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","text":"","code":"add_average_active_needles(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","text":"df data frame containing columns start \"fraction\" contain \"active_needles\". columns contain numerical values.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","text":"data frame additional column `average_nr_active_needles` contains rounded average         number active needles row. average NaN, replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Average Number of Active Needles for Each Row in a Data Frame — add_average_active_needles","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(fraction_1_active_needles = c(1, 2, 3),                  fraction_2_active_needles = c(3, 4, 5),                  some_other_column = c('a', 'b', 'c')) average_active_needles(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Event Columns to a DataFrame — add_disease_events","title":"Add Disease Event Columns to a DataFrame — add_disease_events","text":"function enriches dataframe adding several new columns related disease events. sequentially applies functions add local failure event, nodal failure event, systemic failure event, time disease event columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Event Columns to a DataFrame — add_disease_events","text":"","code":"add_disease_events(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Event Columns to a DataFrame — add_disease_events","text":"df dataframe containing patient data. expected `df` already contains necessary columns required `add_local_failure_event()`, `add_nodal_failure_event()`, `add_systemic_failure_event()`, `add_time_to_diseaseevent()` functions.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Event Columns to a DataFrame — add_disease_events","text":"dataframe includes original data along four new columns:   - Local failure event: Indicates whether local failure event occurred.   - Nodal failure event: Indicates whether nodal failure event occurred.   - Systemic failure event: Indicates whether systemic failure event occurred.   - Time disease event: time disease event occurred.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Column for Grade XX CTCAE Event — add_grade_ctcae_event_column","title":"Add a Column for Grade XX CTCAE Event — add_grade_ctcae_event_column","text":"function selects outcome columns adds new column named dynamically based grade threshold (e.g., \"grade4_ctcae_event\").","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Column for Grade XX CTCAE Event — add_grade_ctcae_event_column","text":"","code":"add_grade_ctcae_event_column(df, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Column for Grade XX CTCAE Event — add_grade_ctcae_event_column","text":"df DataFrame containing data. grade_threshold Numeric, threshold value compare .","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Column for Grade XX CTCAE Event — add_grade_ctcae_event_column","text":"DataFrame additional column \"has_gradeX_ctcae_event\" X grade threshold.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","title":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","text":"Takes dataframe bins values specified column three categories: less 30, 30 45 inclusive, greater 45. bins encoded 0, 1, 2, respectively. Missing values left NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","text":"","code":"add_hrctv_volume_bins(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","text":"df dataframe containing volume column binned.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","text":"dataframe original data new column 'fraction01hrctv_volume_bins' encoded values.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bins values in a specified column of a dataframe — add_hrctv_volume_bins","text":"","code":"# Example usage: library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union sample_df <- data.frame(fraction01hrctv_volume_tdvh = c(10, 35, 50, 22, 40, NA)) binned_df <- add_hrctv_volume_bins(sample_df) print(binned_df) #>   fraction01hrctv_volume_tdvh fraction01hrctv_volume_bins #> 1                          10                           0 #> 2                          35                           1 #> 3                          50                           2 #> 4                          22                           0 #> 5                          40                           1 #> 6                          NA                          NA"},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ICIS Indicator Based on Technique — add_icis","title":"Add ICIS Indicator Based on Technique — add_icis","text":"function takes data frame includes `embrace_id` column columns ending \"technique_tdvh\" starting \"fraction\". processes columns determine ICIS \"TRUE\" \"FALSE\" `embrace_id`, converting numerical indicator (1 0) new column named `icis`.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ICIS Indicator Based on Technique — add_icis","text":"","code":"add_icis(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ICIS Indicator Based on Technique — add_icis","text":".data data frame containing `embrace_id` column columns end \"technique_tdvh\" start \"fraction\". contain values can transformed factors.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ICIS Indicator Based on Technique — add_icis","text":"data frame additional column `icis`, numerical indicator (1 0) based         conditions applied columns ending \"technique_tdvh\" starting \"fraction\".","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ICIS Indicator Based on Technique — add_icis","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(embrace_id = c(1, 2, 3),                  fraction_1_technique_tdvh = c(\"0\", \"1\", \"0\"),                  fraction_2_technique_tdvh = c(\"0\", \"1\", \"1\")) add_icis(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Column for Local Failure Events — add_local_failure_event","title":"Add a Column for Local Failure Events — add_local_failure_event","text":"function adds new column dataframe indicates whether local failure event occurred patient. local failure event defined occurrence value 2 'overall_disease_local_recurrence_' columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Column for Local Failure Events — add_local_failure_event","text":"","code":"add_local_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Column for Local Failure Events — add_local_failure_event","text":"df data frame containing least one column starting 'overall_disease_local_recurrence_'. columns contain numerical values 2 indicates local failure event.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Column for Local Failure Events — add_local_failure_event","text":"data frame additional column named 'event_localfailure'. column contains 1 local failure event occurred 0 otherwise.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Column for Local Failure Events — add_local_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ # Example DataFrame (df) # overall_disease_local_recurrence_3m overall_disease_local_recurrence_6m #                                    0                                   2 #                                    0                                   0 #                                    2                                   0 # df <- add_local_failure_event(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"function adds columns indicating whether patient locoregional event, defined either local failure nodal control including para-aortic, whether event locoregional alone, defined locoregional systemic excluding para-aortic.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"","code":"add_locoregional_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"Original dataframe additional boolean columns 'event_locoregional' 'event_locoregional_alone'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"function adds columns indicating whether patient locoregional event whether event locoregional alone. returns tibble created columns columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"","code":"add_locoregional_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"tibble locoregional event variables relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_localfailure = c(TRUE, FALSE),   event_nodalcontrol_incl_pao = c(FALSE, TRUE),   event_systemic_excl_pao = c(FALSE, TRUE) ) result <- add_locoregional_event_with_verification(data) result <- add_locoregional_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any follow-up is lost — add_lost_to_fu","title":"Check if any follow-up is lost — add_lost_to_fu","text":"function checks whether follow-columns data frame contain value `2`, indicate patient lost follow-. EMBRACE-II ","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any follow-up is lost — add_lost_to_fu","text":"","code":"add_lost_to_fu(df, pattern = \"followup_\")"},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any follow-up is lost — add_lost_to_fu","text":"df data frame tibble containing follow-columns. pattern character string specifying pattern identify follow-columns. Default `\"followup\"`.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any follow-up is lost — add_lost_to_fu","text":"data frame additional logical column `is_lost_to_fu` indicating patient lost follow-.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if any follow-up is lost — add_lost_to_fu","text":"","code":"df <- tibble::tibble(   embrace_id = c(\"AAR2001\", \"VIE2001\", \"VIE2002\"),   followup_3m = c(1, 1, 1),   followup_6m = c(1, 1, 1),   followup_9m = c(1, 1, 1),   followup_12m = c(1, -1, 1),   followup_18m = c(1, NA, 1),   followup_24m = c(NA, NA, -1) ) add_lost_to_fu(df) #> Looking for lost to FU and withdrew consent patients. #> # A tibble: 3 × 9 #>   embrace_id followup_3m followup_6m followup_9m followup_12m followup_18m #>   <chr>            <dbl>       <dbl>       <dbl>        <dbl>        <dbl> #> 1 AAR2001              1           1           1            1            1 #> 2 VIE2001              1           1           1           -1           NA #> 3 VIE2002              1           1           1            1            1 #> # ℹ 3 more variables: followup_24m <dbl>, is_lost_to_fu <lgl>, #> #   withdrew_consent <lgl>"},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"function calculates adds maximum tumor dimension columns MRI GYN measurements given dataframe. computes maximum dimension across specified tumor columns without using row-wise operations improved performance. Additionally, replaces infinite values NA newly calculated maximum dimension columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"","code":"add_max_tumor_dimension(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":".data dataframe containing MRI GYN tumor dimension columns specific naming patterns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"dataframe additional columns maximum MRI tumor dimension (`mri_max_tumor_dimension`), maximum GYN tumor dimension (`gyn_max_tumor_dimension`), overall maximum tumor dimension (`max_tumor_dimension`). Infinite values new columns replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"","code":"# Assuming `df` is your dataframe with MRI and GYN tumor dimension columns: df <- data.frame(   mri_tumor_width_sta_d = c(2, Inf, 4),   mri_tumor_height_sta_d = c(3, 5, NA),   gyn_tumor_width_sta_d = c(NA, 6, 2),   gyn_tumor_thickness_sta_d = c(1, 2, 3) )  df <- add_max_tumor_dimension(df) print(df) #>   mri_tumor_width_sta_d mri_tumor_height_sta_d gyn_tumor_width_sta_d #> 1                     2                      3                    NA #> 2                   Inf                      5                     6 #> 3                     4                     NA                     2 #>   gyn_tumor_thickness_sta_d mri_max_tumor_dimension_sta_d #> 1                         1                             3 #> 2                         2                           Inf #> 3                         3                             4 #>   gyn_max_tumor_dimension_sta_d max_tumor_dimension_sta_d #> 1                             1                         3 #> 2                             6                       Inf #> 3                             3                         4"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metastases Variables — add_metastases","title":"Add Metastases Variables — add_metastases","text":"function adds variables indicating presence metastases various locations based EMBRACE-II data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metastases Variables — add_metastases","text":"","code":"add_metastases(data)"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metastases Variables — add_metastases","text":"data tibble containing EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metastases Variables — add_metastases","text":"tibble metastases indicator variables added","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Metastases Variables — add_metastases","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) data <- tibble(   supraclavicular_nodes_3m = c(0, 1, 0, 1),   supraclavicular_nodes_6m = c(0, 0, 1, 1) ) result <- add_metastases(data) print(result) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metastases Variables with Verification — add_metastases_with_verification","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"Add Metastases Variables Verification","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"","code":"add_metastases_with_verification(data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"data tibble containing EMBRACE-II data save_excel Logical indicating whether save results Excel file","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"tibble metastases indicators relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Column for Nodal Failure Events — add_nodal_failure_event","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"function adds new column data frame indicates whether nodal failure event occurred patient. column name varies study: - EMBRACE-: 'event_nodalcontrol_incl_pao' - EMBRACE-II: 'event_nodalfailure'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"","code":"add_nodal_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"df data frame containing: - columns starting 'disease_nodal_status_' containing numerical values - 'study' column indicating either 'embrace_i' 'embrace_ii'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"data frame additional column (name depends study) containing 1 nodal failure event occurred 0 otherwise. values NA across relevant columns particular patient, result also NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"nodal failure event defined occurrence value 2 nodal status column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Column for Nodal Failure Events — add_nodal_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ test_data <- tibble(   study = c(\"embrace_i\", \"embrace_ii\"),   disease_nodal_status_3m = c(0, 2),   disease_nodal_status_6m = c(0, 0) ) result <- add_nodal_failure_event(test_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Number of Para Aortic Lymph Nodes per Patient — add_number_paraaortic_ln_stat_d","title":"Add Number of Para Aortic Lymph Nodes per Patient — add_number_paraaortic_ln_stat_d","text":"Add Number Para Aortic Lymph Nodes per Patient","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Number of Para Aortic Lymph Nodes per Patient — add_number_paraaortic_ln_stat_d","text":"","code":"add_number_paraaortic_ln_stat_d(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":null,"dir":"Reference","previous_headings":"","what":"Add parallel or oblique classification for icis — add_parallel_oblique_needles","title":"Add parallel or oblique classification for icis — add_parallel_oblique_needles","text":"Add parallel oblique classification icis","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add parallel or oblique classification for icis — add_parallel_oblique_needles","text":"","code":"add_parallel_oblique_needles(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new columns to a data frame that contain the maximum parametrial involvement — add_parametrial_involvement","title":"Add new columns to a data frame that contain the maximum parametrial involvement — add_parametrial_involvement","text":"function adds several new columns given data frame, containing maximum value two existing columns related parametrial involvement.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new columns to a data frame that contain the maximum parametrial involvement — add_parametrial_involvement","text":"","code":"add_parametrial_involvement(data)"},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new columns to a data frame that contain the maximum parametrial involvement — add_parametrial_involvement","text":"data data frame containing least two sets numeric columns representing parametrial involvement left right side.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new columns to a data frame that contain the maximum parametrial involvement — add_parametrial_involvement","text":"data frame new columns added.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Column for Systemic Failure Events — add_systemic_failure_event","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"function adds new column data frame indicates whether systemic failure event occurred patient. column name event definition varies study:","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"","code":"add_systemic_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"df data frame containing: - columns starting 'disease_systemic_status_' containing numerical values - 'study' column indicating either 'embrace_i' 'embrace_ii'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"data frame additional columns systemic events. patient value column corresponding study, NA column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"EMBRACE-('event_systemic_excl_pao'):   - Event defined occurrence value 1 2 systemic status column EMBRACE-II ('event_systemicfailure'):   - Event defined occurrence value 2 systemic status column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Column for Systemic Failure Events — add_systemic_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ test_data <- tibble(   study = c(\"embrace_i\", \"embrace_ii\"),   disease_systemic_status_3m = c(1, 2),   disease_systemic_status_6m = c(0, 0) ) result <- add_systemic_failure_event(test_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","title":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","text":"Adds `time_to_bt`, `ott_ebrt`, `time_to_bt_percent` columns data frame based EBRT start end dates.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","text":"","code":"add_time_to_bt(x)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","text":"x Data frame containing `embrace_id`, `ebrt_start_date_tdvh`, `ebrt_end_date_tdvh`, `fraction01date_tdvh`.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","text":"Data frame additional columns `time_to_bt`, `ott_ebrt`, `time_to_bt_percent`.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Time-to-BT and OTT-EBRT Features to Data Frame — add_time_to_bt","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   embrace_id = c(1, 2),   ebrt_start_date_tdvh = as.Date(c(\"2022-01-01\", \"2022-01-15\")),   ebrt_end_date_tdvh = as.Date(c(\"2022-01-31\", \"2022-02-15\")),   fraction01date_tdvh = as.Date(c(\"2022-01-05\", \"2022-01-18\")) ) add_time_to_bt(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the latest assessment date and follow-up time to the disease event — add_time_to_diseaseevent","title":"Calculate the latest assessment date and follow-up time to the disease event — add_time_to_diseaseevent","text":"function processes dataframe find latest assessment date disease event. disease event (defined corresponding columns) occurs, date considered latest.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the latest assessment date and follow-up time to the disease event — add_time_to_diseaseevent","text":"","code":"add_time_to_diseaseevent(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the latest assessment date and follow-up time to the disease event — add_time_to_diseaseevent","text":"df data frame columns include assessment dates, histology assessment dates, disease recurrence information.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the latest assessment date and follow-up time to the disease event — add_time_to_diseaseevent","text":"data frame added columns latest assessment date time event months.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","title":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","text":"function adds new column named `timetoevent_vitalstatus` given data frame. EMBRACE , calculates time interval months `histology_assesment_date` latest `vital_status_last_info_date` assessment dates. EMBRACE II, also considers `vital_status_date_of_death_vital_status` available.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","text":"","code":"add_time_to_last_vitalstatus(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","text":"df data frame contains required columns based study type","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","text":"data frame new updated `timetoevent_vitalstatus` column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Time to Last Vital Status in Months — add_time_to_last_vitalstatus","text":"","code":"if (FALSE) { # \\dontrun{ # Given a DataFrame df with the required columns # df <- add_time_to_last_vitalstatus(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Vital Status Events to DataFrame — add_vitalstatus_event","title":"Add Vital Status Events to DataFrame — add_vitalstatus_event","text":"function adds updates column named `vital_status_os` given data frame. sets value `vital_status_os` based existing value value `latest_assessment_date_disease`. `vital_status_os` NA `latest_assessment_date_disease` NA, `vital_status_os` set 0.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Vital Status Events to DataFrame — add_vitalstatus_event","text":"","code":"add_vitalstatus_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Vital Status Events to DataFrame — add_vitalstatus_event","text":"df data frame contains least columns `vital_status_os` `latest_assessment_date_disease`.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Vital Status Events to DataFrame — add_vitalstatus_event","text":"data frame updated new `vital_status_os` column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Vital Status Events to DataFrame — add_vitalstatus_event","text":"","code":"if (FALSE) { # \\dontrun{ # Given a DataFrame df with columns `vital_status_os` and `latest_assessment_date_disease` # df <- add_vitalstatus_event(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Changes from the Change Log to the Dataframe — apply_change_log","title":"Apply Changes from the Change Log to the Dataframe — apply_change_log","text":"function reads change log Excel file applies changes dataframe. ensures new values correctly converted appropriate data types applying changes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Changes from the Change Log to the Dataframe — apply_change_log","text":"","code":"apply_change_log(data)"},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Changes from the Change Log to the Dataframe — apply_change_log","text":"data dataframe containing master data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Changes from the Change Log to the Dataframe — apply_change_log","text":"dataframe applied changes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Changes from the Change Log to the Dataframe — apply_change_log","text":"change log Excel file located \"data_raw/change_log/data_change_log.xlsx\" columns: `RecordID`, `Field`, `NewValue`. function reads change log, converts `NewValue` appropriate type based column type master dataframe, applies changes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","title":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","text":"function extends check_nodal_location check multiple locations simultaneously","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","text":"","code":"check_multiple_locations(.data, locations, time_point = \"any\")"},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","text":".data input dataframe containing patient node data locations Character vector anatomical locations check time_point Optional character string specify timepoint check","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","text":"Original dataframe additional boolean columns location","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Multiple Nodal Locations and Add to Original Data — check_multiple_locations","text":"","code":"if (FALSE) { # \\dontrun{ # Check for multiple locations locations <- c(\"R int iliac\", \"L int iliac\", \"Para Aortic\") result <- check_multiple_locations(patient_data, locations) } # }"},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Specific Nodal Location — check_nodal_location","title":"Check for Specific Nodal Location — check_nodal_location","text":"function checks whether patients lymph nodes specific anatomical locations, either diagnosis, follow-, time point.","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Specific Nodal Location — check_nodal_location","text":"","code":"check_nodal_location(.data, location, time_point = \"any\")"},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Specific Nodal Location — check_nodal_location","text":".data input dataframe containing patient node data location Character string specifying anatomical location check. Must one : \"L ext iliac\", \"L int iliac\", \"L com iliac\", \"R ext iliac\", \"R int iliac\", \"R com iliac\", \"Para Aortic\", \"L groin\", \"R groin\", \"R parame/paracervix\", \"L parame/paracervix\", \"\" time_point Optional character string specify timepoint check. Must one : \"diagnosis\", \"followup\", \"\" (default)","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Specific Nodal Location — check_nodal_location","text":"tibble columns: embrace_id: patient identifier has_location: Boolean indicating presence specified nodal location","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Specific Nodal Location — check_nodal_location","text":"","code":"if (FALSE) { # \\dontrun{ # Check for right internal iliac nodes at any time result <- check_nodal_location(patient_data, \"R int iliac\")  # Check only at diagnosis diagnosis_nodes <- check_nodal_location(patient_data, \"R int iliac\",                                        time_point = \"diagnosis\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up eortc column names — clean_eortc_names","title":"Clean up eortc column names — clean_eortc_names","text":"Clean eortc column names","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up eortc column names — clean_eortc_names","text":"","code":"clean_eortc_names(df, time_suffix)"},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up eortc column names — clean_eortc_names","text":"df data frame containing side effect columns. time_suffix suffix indicating time point (e.g., \"_3m\").","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up eortc column names — clean_eortc_names","text":"vector cleaned-side effect column names.","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up side effect column names — clean_side_effect_names","title":"Clean up side effect column names — clean_side_effect_names","text":"Clean side effect column names","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up side effect column names — clean_side_effect_names","text":"","code":"clean_side_effect_names(df, time_suffix = \"_3m\")"},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up side effect column names — clean_side_effect_names","text":"df data frame containing side effect columns. time_suffix suffix indicating time point (e.g., \"_3m\").","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up side effect column names — clean_side_effect_names","text":"vector cleaned-side effect column names.","code":""},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Styled Excel Sheet — createStyledExcelSheet","title":"Create Styled Excel Sheet — createStyledExcelSheet","text":"Creates Excel sheet styled cells based data provided.","code":""},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Styled Excel Sheet — createStyledExcelSheet","text":"","code":"createStyledExcelSheet(data, filePath, sheetName = \"Side Effects\")"},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Styled Excel Sheet — createStyledExcelSheet","text":"data DataFrame written Excel sheet. filePath Character, path Excel file saved. sheetName Character, name sheet within Excel file.","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_combined_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create combined labels for gtsummary — create_combined_labels","title":"Helper function to create combined labels for gtsummary — create_combined_labels","text":"Helper function create combined labels gtsummary","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_combined_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create combined labels for gtsummary — create_combined_labels","text":"","code":"create_combined_labels()"},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Comparative Outcomes Table for EMBRACE Studies — create_comparative_outcomes_table","title":"Create Comparative Outcomes Table for EMBRACE Studies — create_comparative_outcomes_table","text":"Create Comparative Outcomes Table EMBRACE Studies","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Comparative Outcomes Table for EMBRACE Studies — create_comparative_outcomes_table","text":"","code":"create_comparative_outcomes_table()"},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Comparative Outcomes Table for EMBRACE Studies — create_comparative_outcomes_table","text":"gtsummary table comparing outcomes EMBRACE-EMBRACE-II","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status for Embrace I — emi_add_disease_control","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"function adds column indicating disease control events Embrace data, defined either local failure, regional events, systemic events.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"","code":"emi_add_disease_control(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":".data input dataframe containing patient disease control data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"Original dataframe additional boolean column 'event_disease_control'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"function adds column indicating progression-free survival events, defined either disease event (local failure, regional event, systemic event) death.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"","code":"emi_add_progression_free_survival(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"Original dataframe additional boolean column 'event_progression_free'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"function adds column indicating cancer-specific death events, defined death (Vital Status = 1) main cause death primary cancer (codes 1 3).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"","code":"emii_add_cancer_specific(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":".data input dataframe containing patient vital status data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"Original dataframe additional boolean column 'event_cancer_specific'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"function adds column indicating cancer-specific death events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"","code":"emii_add_cancer_specific_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":".data input dataframe containing patient vital status data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"tibble cancer-specific survival variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_vitalstatus = c(1, 1, 0),   vital_status_cause_of_death_vital_status = c(1, 2, NA) ) result <- emii_add_cancer_specific_with_verification(data) result <- emii_add_cancer_specific_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","title":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","text":"function adds columns possible nodal locations diagnosis input dataset.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","text":"","code":"emii_add_diagnostic_nodes(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","text":".data input dataframe containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","text":"Original dataframe additional boolean columns nodal location diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Diagnostic Node Locations to EMII Data — emii_add_diagnostic_nodes","text":"","code":"if (FALSE) { # \\dontrun{ patient_data <- emii_add_diagnostic_nodes(patient_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status — emii_add_disease_control","title":"Add Disease Control Status — emii_add_disease_control","text":"function adds column indicating disease control events, defined either local failure, nodal failure, systemic failure.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status — emii_add_disease_control","text":"","code":"emii_add_disease_control(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status — emii_add_disease_control","text":".data input dataframe containing patient disease control data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status — emii_add_disease_control","text":"Original dataframe additional boolean column 'event_disease_control'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"function adds column indicating disease control events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"","code":"emii_add_disease_control_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":".data input dataframe containing patient disease control data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"tibble disease control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_localfailure = c(TRUE, FALSE, FALSE),   event_nodalfailure = c(FALSE, TRUE, FALSE),   event_systemicfailure = c(FALSE, FALSE, TRUE) ) result <- emii_add_disease_control_with_verification(data) result <- emii_add_disease_control_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Distant Alone Status — emii_add_distant_alone","title":"Add Distant Alone Status — emii_add_distant_alone","text":"function adds column indicating whether patient distant metastases alone, defined systemic failure without para-aortic nodes local nodal failures.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Distant Alone Status — emii_add_distant_alone","text":"","code":"emii_add_distant_alone(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Distant Alone Status — emii_add_distant_alone","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Distant Alone Status — emii_add_distant_alone","text":"Original dataframe additional boolean column 'distant_alone'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"function adds column indicating whether patient distant metastases alone returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"","code":"emii_add_distant_alone_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"tibble distant alone variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_systemicfailure = c(TRUE, FALSE),   has_paraaortic_nodes_above_l2 = c(FALSE, TRUE),   event_paraaortic_nodal = c(FALSE, FALSE),   event_localfailure = c(FALSE, FALSE),   event_pelvic_nodal = c(FALSE, FALSE) ) result <- add_distant_alone_with_verification(data) result <- add_distant_alone_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Elective Targets Analysis — emii_add_elective_targets","title":"Elective Targets Analysis — emii_add_elective_targets","text":"function processes input data frame analyze determine elective targets based various criteria including nodal information, tumor dimensions, risk assessments. integrates multiple internal functions perform analysis finally adds elective target analysis results input data frame.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elective Targets Analysis — emii_add_elective_targets","text":"","code":"emii_add_elective_targets(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elective Targets Analysis — emii_add_elective_targets","text":".data EMII dataframe","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Elective Targets Analysis — emii_add_elective_targets","text":"data frame additional columns indicating elective target analysis results, including whether case high risk, inguinal involvement, selected elective target algorithm outcome.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elective Targets Analysis — emii_add_elective_targets","text":"","code":"# Assuming `df` is your data frame with the necessary columns: # result <- elective_targets(df)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Classification Column — emii_add_nodal_classification","title":"Add Nodal Classification Column — emii_add_nodal_classification","text":"function adds new column classifying nodal status 'N0', 'N1PAN', 'N1pelvic' based pathological nodes present Para Aortic lymph node status diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Classification Column — emii_add_nodal_classification","text":"","code":"emii_add_nodal_classification(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Classification Column — emii_add_nodal_classification","text":".data input dataframe containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Classification Column — emii_add_nodal_classification","text":"Original dataframe additional 'nodal_classification' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Classification Column — emii_add_nodal_classification","text":"","code":"if (FALSE) { # \\dontrun{ patient_data <- emii_add_nodal_classification(patient_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"function creates new disease event variable endpoint \"Nodal control (incl. para-aortic)\" based EMBRACE-II data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"","code":"emii_add_nodalcontrol_incl_pao(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"data tibble containing EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"tibble new disease event variable added","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"","code":"library(dplyr)  # Create sample data data <- tibble(   event_pelvic_nodal = c(0L, 1L, 0L, 1L),   event_paraaortic_nodal = c(0L, 0L, 1L, 1L) )  # Apply the function result <- emii_add_nodalcontrol_incl_pao(data) print(result) #> # A tibble: 4 × 3 #>   event_pelvic_nodal event_paraaortic_nodal event_nodalcontrol_incl_pao #>                <int>                  <int> <lgl>                       #> 1                  0                      0 FALSE                       #> 2                  1                      0 TRUE                        #> 3                  0                      1 TRUE                        #> 4                  1                      1 TRUE"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"function creates new disease event variable returns tibble created column columns used function verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"","code":"emii_add_nodalcontrol_incl_pao_with_verification(data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"data tibble containing EMBRACE-II data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"tibble new disease event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_pelvic_nodal = c(0L, 1L),   event_paraaortic_nodal = c(0L, 1L) ) result <- emii_add_nodalcontrol_incl_pao_with_verification(data) result <- emii_add_nodalcontrol_incl_pao_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Number of Common Iliac Lymph Nodes per Patient — emii_add_number_common_iliac_ln_stat_d","title":"Add Number of Common Iliac Lymph Nodes per Patient — emii_add_number_common_iliac_ln_stat_d","text":"Add Number Common Iliac Lymph Nodes per Patient","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Number of Common Iliac Lymph Nodes per Patient — emii_add_number_common_iliac_ln_stat_d","text":"","code":"emii_add_number_common_iliac_ln_stat_d(df)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"function calculates overall treatment time (OTT) days dataset containing EBRT start end dates, fraction dates. OTT computed EBRT start date last available treatment date, considering `ebrt_end_date_tdvh` fraction date columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"","code":"emii_add_ott(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"data data frame containing treatment data. Must include `ebrt_start_date_tdvh`, `ebrt_end_date_tdvh`, columns representing fraction dates names containing \"fraction\" \"date\".","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"data frame two additional columns: `last_treatment_date`: latest treatment date row. `ott_days`: overall treatment time days (numeric).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"","code":"library(dplyr) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union emii <- tibble(   embrace_id = c(\"AAR2001\", \"VIE2001\"),   ebrt_start_date_tdvh = as.POSIXct(c(\"2016-11-04\", \"2016-03-30\")),   ebrt_end_date_tdvh = as.POSIXct(c(\"2016-12-08\", \"2016-05-03\")),   fraction01date_tdvh = as.POSIXct(c(\"2016-12-19\", \"2016-05-10\")),   fraction02date_tdvh = as.POSIXct(c(\"2016-12-27\", \"2016-05-11\")) ) emii_add_ott(emii) #> # A tibble: 2 × 7 #>   embrace_id ebrt_start_date_tdvh ebrt_end_date_tdvh  fraction01date_tdvh #>   <chr>      <dttm>               <dttm>              <dttm>              #> 1 AAR2001    2016-11-04 00:00:00  2016-12-08 00:00:00 2016-12-19 00:00:00 #> 2 VIE2001    2016-03-30 00:00:00  2016-05-03 00:00:00 2016-05-10 00:00:00 #> # ℹ 3 more variables: fraction02date_tdvh <dttm>, last_treatment_date <dttm>, #> #   ott <dbl>"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All EMII Outcome Endpoints — emii_add_outcome","title":"Get All EMII Outcome Endpoints — emii_add_outcome","text":"function applies endpoint definitions raw EMII data, creating comprehensive dataset outcome measures.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All EMII Outcome Endpoints — emii_add_outcome","text":"","code":"emii_add_outcome(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All EMII Outcome Endpoints — emii_add_outcome","text":".data raw EMII dataframe","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All EMII Outcome Endpoints — emii_add_outcome","text":"Dataframe additional outcome columns added","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"function adds column indicating whether patient para-aortic nodal involvement, defined either para-aortic metastases para-aortic nodal failure follow-.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"","code":"emii_add_paraaortic_nodal(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"Original dataframe additional boolean column 'event_paraaortic_nodal'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"function adds column indicating whether patient para-aortic nodal involvement returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"","code":"emii_add_paraaortic_nodal_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"tibble para-aortic nodal control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   has_paraaortic_metastases = c(TRUE, FALSE),   has_Para.Aortic_followup = c(FALSE, TRUE) ) result <- emii_add_paraaortic_nodal_with_verification(data) result <- emii_add_paraaortic_nodal_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Composite Pelvic Event Status — emii_add_pelvic_event","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"function adds column indicating whether patient pelvic event, defined either local failure pelvic nodal event.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"","code":"emii_add_pelvic_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"Original dataframe additional boolean column 'event_pelvic'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"function adds column indicating whether patient pelvic event returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"","code":"emii_add_pelvic_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"tibble pelvic event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_localfailure = c(TRUE, FALSE),   event_pelvic_nodal = c(FALSE, TRUE) ) result <- emii_add_pelvic_event_with_verification(data) result <- emii_add_pelvic_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"function adds column indicating whether patient pelvic nodal event. pelvic nodal event defined event_nodalfailure least one positive node following locations: external iliac, internal iliac, common iliac, parametrial/paracervical regions (left right).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"","code":"emii_add_pelvic_nodal_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":".data input dataframe containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"Original dataframe additional boolean column 'event_pelvic_nodal'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"function adds column indicating whether patient pelvic nodal event returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"","code":"emii_add_pelvic_nodal_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":".data input dataframe containing patient node data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"tibble pelvic nodal event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_nodalfailure = c(TRUE, FALSE),   has_Para.Aortic_followup = c(FALSE, TRUE),   has_other_followup = c(FALSE, FALSE),   has_L.groin_followup = c(FALSE, FALSE),   has_R.groin_followup = c(FALSE, FALSE) ) result <- emii_add_pelvic_nodal_event_with_verification(data) result <- emii_add_pelvic_nodal_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status — emii_add_progression_free_survival","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"function adds column indicating progression-free survival events, defined either disease event (local failure, nodal control including PAO, systemic excluding PAO) death.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"","code":"emii_add_progression_free_survival(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"Original dataframe additional boolean column 'event_progression_free'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"function adds column indicating progression-free survival events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"","code":"emii_add_progression_free_survival_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"tibble progression-free survival variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_disease_control = c(TRUE, FALSE, FALSE),   event_vitalstatus = c(0, 1, 0) ) result <- emii_add_progression_free_survival_with_verification(data) result <- emii_add_progression_free_survival_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","title":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","text":"function adds columns possible nodal locations follow-input dataset.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","text":"","code":"emii_add_recurrent_nodes(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","text":".data input dataframe containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","text":"Original dataframe additional boolean columns nodal location follow-","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Recurrent Node Locations to EMII Data — emii_add_recurrent_nodes","text":"","code":"if (FALSE) { # \\dontrun{ patient_data <- emii_add_recurrent_nodes(patient_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"function adds column indicating whether patient systemic failure, defined systemic failure least one following: supraclavicular nodes, mediastinal nodes, liver metastases, bone metastases, brain metastases, lung metastases, abdominal carcinomatosis, metastases.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"","code":"emii_add_systemic_excl_pao(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"Original dataframe additional boolean column 'event_systemic_excl_pao'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"function adds column indicating whether patient systemic failure returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"","code":"emii_add_systemic_excl_pao_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"tibble systemic control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_systemicfailure = c(TRUE, FALSE),   has_liver_metastases = c(TRUE, FALSE),   has_bone_metastases = c(FALSE, TRUE) ) result <- emii_add_systemic_excl_pao_with_verification(data) result <- emii_add_systemic_excl_pao_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","title":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","text":"function calculates absolute contributions `tandem_applicator`, `vaginal_applicator`, `needles`, `trak` totals across multiple fractions","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","text":"","code":"emii_add_trak_absolute(df, num_fractions = 7)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","text":"df dataframe containing trak percentage columns multiple fractions. num_fractions integer specifying number fractions process. Default 7.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","text":"dataframe new absolute values trak component, cleaned based given rules.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Trak Absolute Values and Clean Data — emii_add_trak_absolute","text":"function works three main steps: 1. **trak_calculate_all_fractions()**: Calculates absolute contributions components (tandem, vaginal, needles) fraction. 2. **trak_calculate_totals()**: Calculates total sums fractions. 3. **trak_clean_data()**: Cleans data, setting sum columns `NA` volume greater 150 trak component zero.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"function analyzes numeric columns dataset identifies extreme outliers using interquartile range (IQR) method. extreme outlier defined value 3 times IQR Q1 Q3.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"","code":"emii_find_outliers(   data,   iqr_multiplier = 3,   save_excel = FALSE,   excel_path = NULL )"},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"data tibble containing EMBRACE-II data iqr_multiplier Numeric; multiplier IQR define outlier threshold (default: 3) save_excel Logical; TRUE, saves outliers Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"tibble containing outlier information (embrace_id, variable, value, threshold, median)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   outliers <- emii_find_outliers(clean_data)   outliers <- emii_find_outliers(clean_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"function loads EMBRACE-II data processes create clean dataset ready final analysis. applies necessary transformations filters.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"","code":"emii_get_clean_data(save_excel = FALSE, excel_path = NULL)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"save_excel Logical; TRUE, saves data frame Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"tibble containing cleaned EMBRACE-II data selected columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   clean_data <- emii_get_clean_data(save_excel = TRUE)   clean_data <- emii_get_clean_data(save_excel = TRUE, excel_path = \"my_data.xlsx\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Status of Critical Parameters in a Dataframe — emii_get_critical_parameter_status","title":"Get Status of Critical Parameters in a Dataframe — emii_get_critical_parameter_status","text":"function generates summary table comparing critical parameters EMBRACE II datasets. also calculates proportion missing data parameter. Optionally, summary table can saved Excel file.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Status of Critical Parameters in a Dataframe — emii_get_critical_parameter_status","text":"","code":"emii_get_critical_parameter_status(save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Status of Critical Parameters in a Dataframe — emii_get_critical_parameter_status","text":"gtsummary object containing combined summary table.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","title":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","text":"function takes clean EMBRACE-II data frame creates data dictionary maps variable names corresponding sections based suffixes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","text":"","code":"emii_get_data_dictionary(data, save_excel = FALSE, excel_path = NULL)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_data_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","text":"data tibble containing clean EMBRACE-II data (output emii_get_clean_data) save_excel Logical; TRUE, saves dictionary Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_data_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","text":"tibble containing variable names corresponding sections","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_data_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Dictionary for Clean EMBRACE-II Data — emii_get_data_dictionary","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   dict <- emii_get_data_dictionary(clean_data)   dict <- emii_get_data_dictionary(clean_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Status of Dosimetric Parameters and Compare with EMBRACE-I — emii_get_dosimetric_parameter_status","title":"Get Status of Dosimetric Parameters and Compare with EMBRACE-I — emii_get_dosimetric_parameter_status","text":"Get Status Dosimetric Parameters Compare EMBRACE-","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Status of Dosimetric Parameters and Compare with EMBRACE-I — emii_get_dosimetric_parameter_status","text":"","code":"emii_get_dosimetric_parameter_status()"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Status of Dosimetric Parameters and Compare with EMBRACE-I — emii_get_dosimetric_parameter_status","text":"gtsummary object containing comparative summary table.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"function identifies first timepoint patient achieves remission based gynecological examination (gyn_remission_status == 1) extracts corresponding gynecological measurements variables timepoint.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"","code":"emii_get_gyn_remission_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"data tibble containing EMBRACE-II follow-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"tibble remission timepoint data (embrace_id, timepoint, gynecological measurements)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"","code":"if (FALSE) { # \\dontrun{   followup_data <- load_embrace_ii_followup()   gyn_remission_data <- emii_get_gyn_remission_data(followup_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","title":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","text":"function takes dataframe wide-format structure, pivots specified columns long format, recodes anatomical positions, returns new dataframe row represents single positive lymph node.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","text":"","code":"emii_get_lymph_nodes_statd(df)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","text":"df dataframe containing patient data specific column structures.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","text":"dataframe long-format one row per positive lymph node,   including recoded anatomical position descriptions.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform a Wide-Format Dataframe to a Long-Format Dataframe — emii_get_lymph_nodes_statd","text":"EMBRACE-II LN diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"function identifies first timepoint patient achieves remission (mri_remission_status_primary == 1) extracts corresponding MRI measurements variables timepoint.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"","code":"emii_get_remission_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"data tibble containing EMBRACE-II follow-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"tibble remission timepoint data (embrace_id, timepoint, MRI measurements)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"","code":"if (FALSE) { # \\dontrun{   followup_data <- load_embrace_ii_followup()   remission_data <- emii_get_remission_data(followup_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"function creates summary statistics table EMBRACE-II data customized formatting. combines mean, SD, median, IQR, range statistics single row per variable includes section information based variable suffixes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"","code":"emii_get_summary_statistics(data, save_excel = FALSE, excel_path = NULL)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"data tibble containing EMBRACE-II data save_excel Logical; TRUE, saves data frame Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"tibble containing summarized statistics one row per variable, including section information","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   summary_stats <- emii_get_summary_statistics(clean_data)   summary_stats <- emii_get_summary_statistics(clean_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_select_key_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Key Variables for Summary Statistics — emii_select_key_variables","title":"Select Key Variables for Summary Statistics — emii_select_key_variables","text":"function selects predefined set key variables EMBRACE-II dataset commonly used summary statistics.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_select_key_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Key Variables for Summary Statistics — emii_select_key_variables","text":"","code":"emii_select_key_variables(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_select_key_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Key Variables for Summary Statistics — emii_select_key_variables","text":"data tibble containing EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_select_key_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Key Variables for Summary Statistics — emii_select_key_variables","text":"tibble containing selected variables","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_select_key_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Key Variables for Summary Statistics — emii_select_key_variables","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   key_vars <- emii_select_key_variables(clean_data)   summary_stats <- emii_get_summary_statistics(key_vars) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Run All Event Verification Functions — emii_verify_all_events","title":"Run All Event Verification Functions — emii_verify_all_events","text":"function runs event-related verification functions combines results single Excel workbook multiple sheets.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run All Event Verification Functions — emii_verify_all_events","text":"","code":"emii_verify_all_events(save_excel = TRUE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run All Event Verification Functions — emii_verify_all_events","text":"save_excel Logical indicating whether save results Excel file (default: TRUE) .data input dataframe containing patient data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run All Event Verification Functions — emii_verify_all_events","text":"list containing verification results","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run All Event Verification Functions — emii_verify_all_events","text":"","code":"if (FALSE) { # \\dontrun{ results <- emii_verify_all_events(data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Based on Grade Threshold — filter_grade_threshold","title":"Filter Data Based on Grade Threshold — filter_grade_threshold","text":"Filters dataframe based specified side effect columns grade threshold, retaining rows meet threshold criteria.","code":""},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Based on Grade Threshold — filter_grade_threshold","text":"","code":"filter_grade_threshold(df, side_effect_cols, grade_threshold = 4)"},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Based on Grade Threshold — filter_grade_threshold","text":"df DataFrame containing data filtered. side_effect_cols Character vector specifying columns check threshold.","code":""},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Based on Grade Threshold — filter_grade_threshold","text":"DataFrame filtered based grade threshold.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Excel Reports for Patients — generateExcelReportsForPatients","title":"Generate Excel Reports for Patients — generateExcelReportsForPatients","text":"Cleans side effect names, filters data based grade threshold, generates Excel reports patient.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Excel Reports for Patients — generateExcelReportsForPatients","text":"","code":"generateExcelReportsForPatients(data, outputDir, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Excel Reports for Patients — generateExcelReportsForPatients","text":"data DataFrame, data processed. outputDir Character, output directory Excel reports. grade_threshold Grade threshold","code":""},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Patient Excel Reports — generatePatientExcelReports","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"row filtered dataframe, generates Excel report filename based patient ID.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"","code":"generatePatientExcelReports(df_filtered, root_folder)"},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"df_filtered DataFrame, filtered data reports generated. root_folder Character, root folder subfolders Excel files saved.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Combined Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","title":"Get Combined Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"Loads combines outcome data EMBRACE studies, ensuring consistent variable names structure.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Combined Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"","code":"get_combined_outcomes()"},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Combined Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"tibble containing combined outcome data studies 'study' identifier","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_followup_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Follow-Up Events — get_followup_events","title":"Get Follow-Up Events — get_followup_events","text":"function filters patients based specified criteria columns match given basename pattern.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_followup_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Follow-Up Events — get_followup_events","text":"","code":"get_followup_events(df, basename, criteria)"},{"path":"https://steecker.github.io/embraceR/reference/get_followup_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Follow-Up Events — get_followup_events","text":"#' @examples","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest side effects for each patient — get_latest_side_effects","title":"Get the latest side effects for each patient — get_latest_side_effects","text":"Get latest side effects patient","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest side effects for each patient — get_latest_side_effects","text":"","code":"get_latest_side_effects(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest side effects for each patient — get_latest_side_effects","text":"df data frame containing side effect follow-columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest side effects for each patient — get_latest_side_effects","text":"data frame new columns latest side effects latest follow-ID.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"function computes maximum two numeric columns observation. NA values handled one value NA , non-NA value returned. values NA, NA returned.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"","code":"get_max_of_two_columns(df, col1, col2)"},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"df data frame least two numeric columns. col1 name first numeric column. col2 name second numeric column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"numeric vector containing maximum value observation.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum side effect values and corresponding timepoints and export to Excel with conditional formatting — get_max_side_effects","title":"Get maximum side effect values and corresponding timepoints and export to Excel with conditional formatting — get_max_side_effects","text":"Get maximum side effect values corresponding timepoints export Excel conditional formatting","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum side effect values and corresponding timepoints and export to Excel with conditional formatting — get_max_side_effects","text":"","code":"get_max_side_effects(   df,   endpoints,   max_grade = 0,   export_to_excel = FALSE,   file_name = \"max_side_effects.xlsx\" )"},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum side effect values and corresponding timepoints and export to Excel with conditional formatting — get_max_side_effects","text":"df data frame containing side effect columns multiple timepoints patient ID column \"embrace_id\". endpoints character vector endpoint basenames (e.g., embraceR::clean_side_effect_names()). max_grade Numeric threshold; patients least one max_value >= max_grade retained. export_to_excel Logical; TRUE, exports result Excel file. file_name Character; name Excel file export export_to_excel TRUE.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum side effect values and corresponding timepoints and export to Excel with conditional formatting — get_max_side_effects","text":"data frame maximum side effect values timepoints endpoint patient.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Patient-Level Summary Table of Nodal Anatomical Locations — get_nodal_location_patient_summary","title":"Generate Patient-Level Summary Table of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"Creates formatted summary table using gtsummary showing number percentage patients least one lymph node anatomical location EMBRACE-II diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Patient-Level Summary Table of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"","code":"get_nodal_location_patient_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Patient-Level Summary Table of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"df dataframe containing EMBRACE-II dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Patient-Level Summary Table of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"gt table object showing distribution patients lymph nodes location","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"Creates formatted summary table using gtsummary showing frequency percentage anatomical location nodal dataset EMBRACE-II diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"","code":"get_nodal_location_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"df dataframe containing EMBRACE-II dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"gt table object showing distribution lymph node locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Patient-Level Summary Table of Recurrent Nodes and Metastases — get_recurrence_and_metastases_summary","title":"Generate Patient-Level Summary Table of Recurrent Nodes and Metastases — get_recurrence_and_metastases_summary","text":"Creates formatted summary table using gtsummary showing number percentage patients recurrent lymph nodes metastases follow-EMBRACE-II.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Patient-Level Summary Table of Recurrent Nodes and Metastases — get_recurrence_and_metastases_summary","text":"","code":"get_recurrence_and_metastases_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Patient-Level Summary Table of Recurrent Nodes and Metastases — get_recurrence_and_metastases_summary","text":"df dataframe containing EMBRACE-II dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Patient-Level Summary Table of Recurrent Nodes and Metastases — get_recurrence_and_metastases_summary","text":"gt table object showing distribution patients recurrent nodes   metastases location","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Valid Node Locations — get_valid_locations","title":"Get Valid Node Locations — get_valid_locations","text":"Returns vector valid anatomical locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Valid Node Locations — get_valid_locations","text":"","code":"get_valid_locations()"},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Valid Node Locations — get_valid_locations","text":"Character vector valid anatomical locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Combine Embrace I and Embrace II Data — load_combined_embrace","title":"Load and Combine Embrace I and Embrace II Data — load_combined_embrace","text":"function loads data EMBRACE-EMBRACE-II, processes , combines single dataframe.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Combine Embrace I and Embrace II Data — load_combined_embrace","text":"","code":"load_combined_embrace(   file_path_i = here::here(\"data_raw/embrace_I\"),   file_path_ii = here::here(\"data_raw/embrace_II/emii.xlsx\"),   file_path_eqd2 = here::here(\"data_raw/embrace_II/emii_eqd2.xlsx\"),   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   return_common_columns = T )"},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Combine Embrace I and Embrace II Data — load_combined_embrace","text":"file_path_i path EMBRACE-data root folder. file_path_ii path EMBRACE-II Excel file. file_path_eqd2 path EMBRACE-II EQD2 Excel file. return_common_columns TRUE, return matched columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Combine Embrace I and Embrace II Data — load_combined_embrace","text":"tibble containing cleaned combined data studies.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process Embrace I Data — load_embrace_i","title":"Load and Process Embrace I Data — load_embrace_i","text":"function loads data two different sources Embrace study, processes , joins `embrace_id` column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process Embrace I Data — load_embrace_i","text":"","code":"load_embrace_i(   file_path = here::here(\"data_raw/embrace_I\"),   add_new_columns = T,   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   filter_cohort = T )"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process Embrace I Data — load_embrace_i","text":"file_path path directory containing primary data files. add_new_columns TRUE, calculate add new columns mapping_file Path mapping table file filter_cohort Filter 1318","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process Embrace I Data — load_embrace_i","text":"tibble containing cleaned joined data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process Embrace I Data — load_embrace_i","text":"","code":"if (FALSE) { # \\dontrun{   df <- load_embrace_i() } # }"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process Embrace II Data — load_embrace_ii","title":"Load and Process Embrace II Data — load_embrace_ii","text":"function loads data EMBRACE-II website exports, processes , joins `embrace_id` column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process Embrace II Data — load_embrace_ii","text":"","code":"load_embrace_ii(   file_path = here::here(\"data_raw/embrace_II/emii.xlsx\"),   file_path_eqd2 = here::here(\"data_raw/embrace_II/emii_eqd2.xlsx\"),   add_new_columns = T,   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   include_only_study_patients = TRUE,   replace_minusone_with_na = TRUE )"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process Embrace II Data — load_embrace_ii","text":"file_path path directory containing primary data files. file_path_eqd2 path EMBRACE-II EQD2 Excel file. add_new_columns TRUE, calculate add new columns mapping_file Path mapping table file include_only_study_patients TRUE, return patients included study","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process Embrace II Data — load_embrace_ii","text":"tibble containing cleaned joined data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process Embrace II Data — load_embrace_ii","text":"","code":"if (FALSE) { # \\dontrun{   df <- load_embrace_ii(file_path = \"/path/to/xlsx\", file_path_eqd2 = \"/path/to/eqd2_xlsx\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"function renames columns given dataframe based mapping table. mapping table contain old column names new column names mapped .","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"","code":"map_column_names(data, mapping, study = \"emi\")"},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"data dataframe whose columns renamed. mapping dataframe containing least two columns: `embrace_i_column` Embrace dataset column names, `embrace_ii_column` Embrace II dataset column names. study name study","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"dataframe columns renamed based mapping table.","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"","code":"if (FALSE) { # \\dontrun{   mapping <- data.frame(embrace_i_column = c('col1', 'col2'),                         embrace_ii_column = c('column1', 'column2'),                         new_combined_name = c('new_col1', 'new_col2'))   data <- data.frame(col1 = 1:5, col2 = 6:10)   new_data <- map_columns_based_on_mapping(data, mapping) } # }"},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a Specific Row to a New Position — move_row","title":"Move a Specific Row to a New Position — move_row","text":"function moves specified row dataframe new position.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a Specific Row to a New Position — move_row","text":"","code":"move_row(df, row_from, row_to)"},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a Specific Row to a New Position — move_row","text":"df dataframe containing data. row_from index row move. row_to new index row.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a Specific Row to a New Position — move_row","text":"dataframe row moved new position.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move a Specific Row to a New Position — move_row","text":"","code":"if (FALSE) { # \\dontrun{ df <- tibble::tibble(   a = 1:5,   b = letters[1:5] ) new_df <- move_row(df, 5, 2) print(new_df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform Combined Data — process_combined_data","title":"Process and Transform Combined Data — process_combined_data","text":"function takes combined dataset applies transformations","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform Combined Data — process_combined_data","text":"","code":"process_combined_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform Combined Data — process_combined_data","text":"data tibble dataframe containing combined data processed.","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform Combined Data — process_combined_data","text":"tibble dataframe","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform Combined Data — process_combined_data","text":"","code":"if (FALSE) { # \\dontrun{   processed_data <- process_combined_data(combined_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform EM-I Data — process_emi_data","title":"Process and Transform EM-I Data — process_emi_data","text":"Preprocessing EMBRACE-","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform EM-I Data — process_emi_data","text":"","code":"process_emi_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform EM-I Data — process_emi_data","text":"data tibble dataframe containing combined data processed.","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform EM-I Data — process_emi_data","text":"tibble dataframe","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform EM-I Data — process_emi_data","text":"","code":"if (FALSE) { # \\dontrun{   processed_data <- process_emi_data(combined_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform EM-II Data — process_emii_data","title":"Process and Transform EM-II Data — process_emii_data","text":"Preprocessing EMBRACE-II","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform EM-II Data — process_emii_data","text":"","code":"process_emii_data(   data,   file_path = here::here(\"data_raw/embrace_II/2023-01-18_emii_masterdump.Rds\") )"},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform EM-II Data — process_emii_data","text":"data tibble dataframe containing combined data processed. file_path Path EMBRACE-II master dump file","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform EM-II Data — process_emii_data","text":"tibble dataframe","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform EM-II Data — process_emii_data","text":"","code":"if (FALSE) { # \\dontrun{   processed_data <- process_emii_data(combined_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Follow-up Node Data — process_followup_nodes","title":"Process Follow-up Node Data — process_followup_nodes","text":"Internal helper function efficiently process follow-node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Follow-up Node Data — process_followup_nodes","text":"","code":"process_followup_nodes(.data, diagnosis_nodes)"},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Follow-up Node Data — process_followup_nodes","text":".data input dataframe diagnosis_nodes Lookup table nodes diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Follow-up Node Data — process_followup_nodes","text":"tibble processed follow-node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"Recode convert columns based mapping","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"","code":"recode_and_convert_all_columns(df, stop_on_missing_col = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode and convert columns based on the mapping — recode_and_convert_column","title":"Recode and convert columns based on the mapping — recode_and_convert_column","text":"function converts columns factors recodes levels based provided mapping. can process specific column names columns common base names.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode and convert columns based on the mapping — recode_and_convert_column","text":"","code":"recode_and_convert_column(df, col_name, mapping)"},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode and convert columns based on the mapping — recode_and_convert_column","text":"df data frame containing columns recoded converted. mapping list containing old new levels column base name. stop_on_missing_col logical value. TRUE, function stops column missing data frame. FALSE, skips missing columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode and convert columns based on the mapping — recode_and_convert_column","text":"data frame specified columns recoded converted factors.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"function takes data frame recodes factor levels multiple columns based supplied old new levels. designed used dplyr's mutate(across()) function.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"","code":"recode_factor_levels(x, old_levels, new_levels)"},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"x factor vector data frame column old_levels character vector old factor levels new_levels character vector new factor levels","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"factor vector recoded factor levels","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"function reorders columns dataframe third column based corresponding assessment dates.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"","code":"reorder_columns_based_on_date(df)"},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"df dataframe containing data reordered. first three columns `embrace_id`, `side_effect`, `Diagnosis & Treatment`. subsequent columns named time points (e.g., `3m`, `6m`).","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"dataframe columns reordered based assessment dates.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"function assumes row dataframe `side_effect` column \"assessment_date\" subsequent columns contain corresponding assessment dates. function extracts dates, sorts columns accordingly, returns reordered dataframe.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"","code":"if (FALSE) { # \\dontrun{ df <- tibble::tibble(   embrace_id = c(\"AAR2005\", \"AAR2005\"),   side_effect = c(\"general_comments\", \"assessment_date\"),   `Diagnosis & Treatment` = c(NA, NA),   `3m` = c(NA, \"2017-01-01\"),   `6m` = c(NA, \"2017-07-01\"),   `9m` = c(NA, \"2017-10-01\") ) reordered_df <- reorder_columns_based_on_date(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"Replace Infinite values numeric columns NA","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"","code":"replace_infinite_with_NA(df)"},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"df data frame containing numeric columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"data frame Infinite values numeric columns replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"Replace -1 values numeric columns NA","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"","code":"replace_neg_one_with_NA(df)"},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"df data frame containing numeric columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"data frame -1 values numeric columns replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape Side Effects Data — reshape_side_effects","title":"Reshape Side Effects Data — reshape_side_effects","text":"Converts side effects data wide long format, separating side effect names time points.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape Side Effects Data — reshape_side_effects","text":"","code":"reshape_side_effects(df)"},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape Side Effects Data — reshape_side_effects","text":"df DataFrame, data reshaped.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape Side Effects Data — reshape_side_effects","text":"DataFrame long format separated side effect names time points.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"function saves given dataframe RDS XLSX formats. files saved folder named 'data', filenames include current date.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"","code":"save_embrace_data(df)"},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"df dataframe saved.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"","code":"if (FALSE) { # \\dontrun{   data <- data.frame(x = 1:5, y = 6:10)   save_embrace_data(data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":null,"dir":"Reference","previous_headings":"","what":"save_eviguide_data — save_eviguide_data","title":"save_eviguide_data — save_eviguide_data","text":"save_eviguide_data","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save_eviguide_data — save_eviguide_data","text":"","code":"save_eviguide_data()"},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save_eviguide_data — save_eviguide_data","text":"emi","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Threshold to Data — threshold","title":"Apply Threshold to Data — threshold","text":"function applies threshold given data set determine grade specified level.","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Threshold to Data — threshold","text":"","code":"threshold(x, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Threshold to Data — threshold","text":"x Numeric, value checked threshold. grade_threshold Numeric, threshold value compare .","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Threshold to Data — threshold","text":"Logical, TRUE value threshold, otherwise FALSE.","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Threshold to Data — threshold","text":"","code":"threshold(5, grade_threshold = 4) #> [1] FALSE threshold(NA, grade_threshold = 4) #> [1] FALSE"},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"Transpose long-format sheet wide-format","code":""},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"","code":"transpose_sheet_to_wide(file_path, sheet_name, id_col, key_col)"},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"file_path path Excel file. sheet_name name sheet import. id_col column name contains unique identifiers. key_col column name become new columns wide format.","code":""},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"tibble wide format.","code":""}]
