[{"path":"https://steecker.github.io/embraceR/articles/01_getting-started.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting Started","text":"R (version 4.0 later) RStudio (optional recommended) Place data_raw folder contains necessary data files EMBRACE EMBRACE II root directory project.","code":""},{"path":"https://steecker.github.io/embraceR/articles/01_getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"","code":"# Install from GitHub if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"steecker/embraceR\")"},{"path":[]},{"path":"https://steecker.github.io/embraceR/articles/01_getting-started.html","id":"loading-data","dir":"Articles","previous_headings":"Basic Usage","what":"Loading Data","title":"Getting Started","text":"","code":"library(embraceR)  # Load EMBRACE I data data <- load_embrace_i()  # Load EMBRACE II data data <- load_embrace_ii()  # Load combined data data <- load_combined_embrace()"},{"path":"https://steecker.github.io/embraceR/articles/embrace-ii-pipeline.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"EMBRACE-II Data Processing Pipeline","text":"embraceR package provides comprehensive data processing pipeline EMBRACE-II study data. article explains data flow raw input files final clean dataset ready analysis.","code":""},{"path":"https://steecker.github.io/embraceR/articles/embrace-ii-pipeline.html","id":"data-processing-pipeline","dir":"Articles","previous_headings":"","what":"Data Processing Pipeline","title":"EMBRACE-II Data Processing Pipeline","text":"","code":"# Example of getting the final clean dataset clean_data <- emii_get_clean_data()  # With Excel export clean_data <- emii_get_clean_data(save_excel = TRUE)"},{"path":"https://steecker.github.io/embraceR/articles/variable-description.html","id":"quick-reference-all-added-variables-embrace-ii","dir":"Articles","previous_headings":"","what":"Quick Reference: All Added Variables EMBRACE-II","title":"Variable Description","text":"Patient age diagnosis year_of_birth Implementation: add_age() Unit: Years Intracavitary/Interstitial classification Calculation: Based fraction_*_technique_tdvh columns Implementation: add_icis() Values: Binary (1 = ICIS, 0 = IC) Note: Derived technique values across fractions Detailed ICIS needle classification Calculation: Based fraction_*_technique_tdvh columns Implementation: add_parallel_oblique_needles() Values: “needles”, “parallel needles”, “oblique needles”, “” Average number active needles Calculation: Mean fraction_*_active_needles columns Implementation: add_average_active_needles() Unit: Number needles Time EBRT start first BT fraction Calculation: fraction01date_tdvh - ebrt_start_date_tdvh Implementation: add_time_to_bt() Unit: Days Maximum parametrial involvement indicators Implementation: add_parametrial_involvement() Derived columns: Maximum values paired measurements Source pairs: BT imaging, BT exam, Diagnostic MRI, Diagnostic exam Total Reference Air Kerma (TRAK) values Calculation: Component-wise calculation TRAK percentages Implementation: emii_add_trak_absolute() Unit: cGy 1m Note: Zero values converted NA Overall Treatment Time Implementation: emii_add_ott() Unit: Days Overall treatment time EBRT Calculation: ebrt_end_date_tdvh - ebrt_start_date_tdvh Implementation: add_time_to_bt() Unit: Days Local failure event indicator Calculation: Based disease_local_status_* columns Implementation: add_local_failure_event() Values: 1 = failure, 0 = failure, NA = missing Note: Event triggered status = 2 timepoint Nodal failure event indicator Calculation: Based disease_nodal_status_* columns Implementation: add_nodal_failure_event() Values: 1 = failure, 0 = failure, NA = missing Note: Event triggered status = 2 timepoint Systemic failure event indicator (EMBRACE-II) Calculation: Based disease_systemic_status_* columns Implementation: add_systemic_failure_event() Values: 1 = failure, 0 = failure, NA = missing Note: Event triggered status = 2 timepoint Systemic failure event indicator (EMBRACE-) Calculation: Based disease_systemic_status_* columns Implementation: add_systemic_failure_event() Values: 1 = failure, 0 = failure, NA = missing Note: Event triggered status = 1 2 timepoint Vital status event indicator Calculation: Based vital_status latest_assessment_date_disease Implementation: add_vitalstatus_event() Values: 1 = death, 0 = alive, NA = missing Note: vital status missing assessment date exists, considered alive Time disease event Calculation: Time histology_assesment_date latest assessment Implementation: add_time_to_diseaseevent() Unit: Months Note: Creates columns latest_assessment_date_disease, latest_followup_id Time vital status update Calculation: Time histology_assesment_date latest vital status Implementation: add_time_to_last_vitalstatus() Unit: Months Note: Uses maximum date available vital status sources Relative timing brachytherapy Calculation: time_to_bt / ott_ebrt Implementation: add_time_to_bt() Unit: Proportion High-Risk CTV volume categories Calculation: Based fraction01hrctv_volume_tdvh Implementation: add_hrctv_volume_bins() Values: 0: < 30 cm³, 1: 30-45 cm³, 2: > 45 cm³, NA: missing Maximum tumor dimension diagnosis Calculation: Maximum value across tumor measurements Implementation: add_max_tumor_dimension() Unit: Millimeters Note: Infinite values converted NA Lost follow-indicator Calculation: Based followup_*m columns Implementation: add_lost_to_fu() Values: TRUE/FALSE Note: TRUE followup value = 2 timepoint Consent withdrawal indicator Calculation: Based followup_*m columns Implementation: add_lost_to_fu() Values: TRUE/FALSE Note: TRUE followup value = 3 timepoint Count common iliac lymph nodes diag. Calculation: Sum left right common iliac lymph nodes staging data Implementation: emii_add_number_common_iliac_ln_stat_d() Unit: Count Note: Includes “L com iliac” “R com iliac” anatomical positions Count para-aortic lymph nodes diag. Calculation: Count lymph nodes “Para Aortic” anatomical position staging data Implementation: add_number_paraaortic_ln_stat_d() Unit: Count Note: Identifies nodes specifically labeled “Para Aortic”","code":""},{"path":"https://steecker.github.io/embraceR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Ecker. Author, maintainer.","code":""},{"path":"https://steecker.github.io/embraceR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ecker S (2025). embraceR: Data Processing Tools EMBRACE Studies. R package version 0.1.0, https://github.com/SteEcker/embraceR.","code":"@Manual{,   title = {embraceR: Data Processing Tools for EMBRACE Studies},   author = {Stefan Ecker},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/SteEcker/embraceR}, }"},{"path":"https://steecker.github.io/embraceR/index.html","id":"embracer-","dir":"","previous_headings":"","what":"Data Processing Tools for EMBRACE Studies","title":"Data Processing Tools for EMBRACE Studies","text":"comprehensive R package processing analyzing data EMBRACE-EMBRACE-II studies gynecological oncology.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Data Processing Tools for EMBRACE Studies","text":"embraceR streamlines analysis clinical outcomes data EMBRACE studies (Image-guided intensity-modulated External beam radiochemotherapy MRI-based adaptive BRAchytherapy locally advanced CErvical cancer). provides standardized workflows ensures consistent analysis approaches across research projects.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"id_️-data-access","dir":"","previous_headings":"","what":"⚠️ Data Access","title":"Data Processing Tools for EMBRACE Studies","text":"package contains analysis code - study data included. Data access provided participating centers researchers upon request.","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Processing Tools for EMBRACE Studies","text":"","code":"# Install from GitHub if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"steecker/embraceR\")"},{"path":[]},{"path":"https://steecker.github.io/embraceR/index.html","id":"data-processing","dir":"","previous_headings":"Key Features","what":"Data Processing","title":"Data Processing Tools for EMBRACE Studies","text":"Standardized data loading EMBRACE & II Automated cleaning transformation Consistent variable naming conventions","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"clinical-analysis","dir":"","previous_headings":"Key Features","what":"Clinical Analysis","title":"Data Processing Tools for EMBRACE Studies","text":"Disease control endpoints Survival analysis tools Treatment response assessment Morbidity tracking","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"quality-of-life","dir":"","previous_headings":"Key Features","what":"Quality of Life","title":"Data Processing Tools for EMBRACE Studies","text":"EORTC questionnaire analysis Side effects monitoring Long-term follow-tools","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"reporting","dir":"","previous_headings":"Key Features","what":"Reporting","title":"Data Processing Tools for EMBRACE Studies","text":"Summary statistics generation Excel report creation Comparative outcome tables","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Processing Tools for EMBRACE Studies","text":"","code":"library(embraceR)  # Load and process EMBRACE II data data <- load_embrace_ii(   file_path = \"path/to/emii.xlsx\",   file_path_eqd2 = \"path/to/emii_eqd2.xlsx\" )"},{"path":[]},{"path":"https://steecker.github.io/embraceR/index.html","id":"core","dir":"","previous_headings":"Dependencies","what":"Core","title":"Data Processing Tools for EMBRACE Studies","text":"dplyr - Data manipulation tidyr - Data tidying purrr - Functional programming","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"data-importexport","dir":"","previous_headings":"Dependencies","what":"Data Import/Export","title":"Data Processing Tools for EMBRACE Studies","text":"readxl - Excel file reading openxlsx - Excel file writing haven - SPSS file reading","code":""},{"path":"https://steecker.github.io/embraceR/index.html","id":"analysis--utilities","dir":"","previous_headings":"Dependencies","what":"Analysis & Utilities","title":"Data Processing Tools for EMBRACE Studies","text":"gtsummary - Summary tables lubridate - Date handling stringr - String manipulation glue - String interpolation janitor - Data cleaning - File path handling sjlabelled - Variable labeling","code":""},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":null,"dir":"Reference","previous_headings":"","what":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"Defines standard mapping numeric codes anatomical positions lymph nodes EMBRACE studies.","code":""},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"","code":"NODAL_POSITION_MAPPING"},{"path":"https://steecker.github.io/embraceR/reference/NODAL_POSITION_MAPPING.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Node Position Mapping Constants — NODAL_POSITION_MAPPING","text":"object class character length 13.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Age to Data Frame — add_age","title":"Add Age to Data Frame — add_age","text":"Calculates age subjects based birth information histology assessment date. EMBRACE-study, age calculated using birth_date_pat, studies use year_of_birth.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Age to Data Frame — add_age","text":"","code":"add_age(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Age to Data Frame — add_age","text":"df data frame containing: - study: Character indicating study name (\"embrace_i\" ) - histology_assessment_date: Date histology assessment - birth_date_pat: Birth date EMBRACE-subjects - year_of_birth: Birth year non-EMBRACE-subjects","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Age to Data Frame — add_age","text":"input data frame additional 'age' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Age to Data Frame — add_age","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   study = c(\"embrace_i\", \"other_study\"),   histology_assesment_date = as.Date(c(\"2024-01-01\", \"2024-01-02\")),   birth_date_pat = c(1980, NA),   year_of_birth = c(NA, 1990) ) df_with_age <- add_age(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Average Number of Active Needles — add_average_active_needles","title":"Calculate Average Number of Active Needles — add_average_active_needles","text":"Computes average number active needles across fractions subject. Identifies columns containing fraction-specific active needle counts calculates mean value.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Average Number of Active Needles — add_average_active_needles","text":"","code":"add_average_active_needles(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Average Number of Active Needles — add_average_active_needles","text":"df data frame containing columns pattern \"fraction_*_active_needles\" store number active needles treatment fraction","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Average Number of Active Needles — add_average_active_needles","text":"input data frame additional column `average_nr_active_needles`         containing rounded average. NaN values converted NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_average_active_needles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Average Number of Active Needles — add_average_active_needles","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(fraction_1_active_needles = c(1, 2, 3),                  fraction_2_active_needles = c(3, 4, 5),                  some_other_column = c('a', 'b', 'c')) average_active_needles(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Event Columns — add_disease_events","title":"Add Disease Event Columns — add_disease_events","text":"Adds columns local, nodal, systemic failure events, plus time--event data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Event Columns — add_disease_events","text":"","code":"add_disease_events(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Event Columns — add_disease_events","text":"df dataframe containing patient data required columns failure events","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Event Columns — add_disease_events","text":"dataframe added columns failure events time measurements","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_disease_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Disease Event Columns — add_disease_events","text":"","code":"if (FALSE) { # \\dontrun{ patient_data <- data.frame(...) enhanced_data <- add_disease_events(patient_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Grade-Specific CTCAE Event Indicator — add_grade_ctcae_event_column","title":"Add Grade-Specific CTCAE Event Indicator — add_grade_ctcae_event_column","text":"Adds binary indicator column showing whether patient experienced side effect meeting specified grade threshold.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Grade-Specific CTCAE Event Indicator — add_grade_ctcae_event_column","text":"","code":"add_grade_ctcae_event_column(df, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Grade-Specific CTCAE Event Indicator — add_grade_ctcae_event_column","text":"df DataFrame containing patient data grade_threshold Numeric, CTCAE grade threshold check ","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_grade_ctcae_event_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Grade-Specific CTCAE Event Indicator — add_grade_ctcae_event_column","text":"DataFrame additional indicator column grade-specific events","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin HRCTV Volume Values — add_hrctv_volume_bins","title":"Bin HRCTV Volume Values — add_hrctv_volume_bins","text":"Categorizes HRCTV volumes three bins: <30, 30-45, >45.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin HRCTV Volume Values — add_hrctv_volume_bins","text":"","code":"add_hrctv_volume_bins(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin HRCTV Volume Values — add_hrctv_volume_bins","text":"df dataframe containing 'fraction01hrctv_volume_tdvh' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin HRCTV Volume Values — add_hrctv_volume_bins","text":"dataframe additional 'fraction01hrctv_volume_bins' column (0, 1, 2)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_hrctv_volume_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin HRCTV Volume Values — add_hrctv_volume_bins","text":"","code":"if (FALSE) { # \\dontrun{ sample_df <- data.frame(fraction01hrctv_volume_tdvh = c(10, 35, 50, 22, 40, NA)) binned_df <- add_hrctv_volume_bins(sample_df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ICIS Indicator Based on Technique — add_icis","title":"Add ICIS Indicator Based on Technique — add_icis","text":"Creates binary indicator (1/0) interstitial component intracavitary/interstitial (ICIS) brachytherapy based technique data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ICIS Indicator Based on Technique — add_icis","text":"","code":"add_icis(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ICIS Indicator Based on Technique — add_icis","text":".data data frame embrace_id fraction technique columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ICIS Indicator Based on Technique — add_icis","text":"data frame additional 'icis' column (1 0)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_icis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ICIS Indicator Based on Technique — add_icis","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(embrace_id = c(1, 2, 3),                  fraction_1_technique_tdvh = c(\"0\", \"1\", \"0\"),                  fraction_2_technique_tdvh = c(\"0\", \"1\", \"1\")) add_icis(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Local Failure Event Column — add_local_failure_event","title":"Add Local Failure Event Column — add_local_failure_event","text":"Adds binary indicator column local failure events based disease status.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Local Failure Event Column — add_local_failure_event","text":"","code":"add_local_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Local Failure Event Column — add_local_failure_event","text":"df data frame containing columns starting 'disease_local_status_'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Local Failure Event Column — add_local_failure_event","text":"data frame additional 'event_localfailure' column (1=failure, 0=failure)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_local_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Local Failure Event Column — add_local_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   disease_local_status_3m = c(0, 2, 0),   disease_local_status_6m = c(0, 0, 2) ) result <- add_local_failure_event(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"function adds columns indicating whether patient locoregional event, defined either local failure nodal control including para-aortic, whether event locoregional alone, defined locoregional systemic excluding para-aortic.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"","code":"add_locoregional_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Locoregional Event Status (Pelvic/PAO) — add_locoregional_event","text":"Original dataframe additional boolean columns 'event_locoregional' 'event_locoregional_alone'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"function adds columns indicating whether patient locoregional event whether event locoregional alone. returns tibble created columns columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"","code":"add_locoregional_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"tibble locoregional event variables relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_locoregional_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Locoregional Event Status with Verification — add_locoregional_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_localfailure = c(TRUE, FALSE),   event_nodalcontrol_incl_pao = c(FALSE, TRUE),   event_systemic_excl_pao = c(FALSE, TRUE) ) result <- add_locoregional_event_with_verification(data) result <- add_locoregional_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any follow-up is lost — add_lost_to_fu","title":"Check if any follow-up is lost — add_lost_to_fu","text":"function examines follow-status columns data frame identify: 1. Patients lost follow-(indicated value 2) 2. Patients withdrew consent (indicated value 3) EMBRACE-II study .","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any follow-up is lost — add_lost_to_fu","text":"","code":"add_lost_to_fu(df, pattern = \"followup_\")"},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any follow-up is lost — add_lost_to_fu","text":"df data frame tibble containing follow-columns values: - 1: Normal follow-- 2: Lost follow-- 3: Withdrew consent - NA: Missing data pattern character string specifying pattern identify follow-columns. Default \"followup_\". Columns must end \"m\" (e.g., followup_3m, followup_6m).","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any follow-up is lost — add_lost_to_fu","text":"data frame two additional logical columns:   - is_lost_to_fu: TRUE patient lost follow-  - withdrew_consent: TRUE patient withdrew consent","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_lost_to_fu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if any follow-up is lost — add_lost_to_fu","text":"","code":"df <- tibble::tibble(   embrace_id = c(\"AAR2001\", \"VIE2001\", \"VIE2002\"),   followup_3m = c(1, 1, 1),   followup_6m = c(1, 1, 1),   followup_9m = c(1, 1, 1),   followup_12m = c(1, -1, 1),   followup_18m = c(1, NA, 1),   followup_24m = c(NA, NA, -1) ) add_lost_to_fu(df) #> Error in add_lost_to_fu(df): could not find function \"add_lost_to_fu\""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"Calculates maximum tumor dimensions MRI GYN measurements dataset. Creates three new columns: maximum MRI dimension, maximum GYN dimension, overall maximum tumor dimension.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"","code":"add_max_tumor_dimension(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":".data dataframe containing MRI GYN tumor dimension columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"dataframe added columns: `mri_max_tumor_dimension_sta_d`,   `gyn_max_tumor_dimension_sta_d`, `max_tumor_dimension_sta_d`","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_max_tumor_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Maximum Tumor Dimension Columns — add_max_tumor_dimension","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `df` is your dataframe with MRI and GYN tumor dimension columns: df <- data.frame(   mri_tumor_width_sta_d = c(2, Inf, 4),   mri_tumor_height_sta_d = c(3, 5, NA),   gyn_tumor_width_sta_d = c(NA, 6, 2),   gyn_tumor_thickness_sta_d = c(1, 2, 3) )  df <- add_max_tumor_dimension(df) print(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metastases Variables — add_metastases","title":"Add Metastases Variables — add_metastases","text":"function adds variables indicating presence metastases various locations based EMBRACE-II data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metastases Variables — add_metastases","text":"","code":"add_metastases(data)"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metastases Variables — add_metastases","text":"data tibble containing EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metastases Variables — add_metastases","text":"tibble metastases indicator variables added","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Metastases Variables — add_metastases","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) data <- tibble(   supraclavicular_nodes_3m = c(0, 1, 0, 1),   supraclavicular_nodes_6m = c(0, 0, 1, 1) ) result <- add_metastases(data) print(result) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metastases Variables with Verification — add_metastases_with_verification","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"Add Metastases Variables Verification","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"","code":"add_metastases_with_verification(data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"data tibble containing EMBRACE-II data save_excel Logical indicating whether save results Excel file","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_metastases_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metastases Variables with Verification — add_metastases_with_verification","text":"tibble metastases indicators relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Failure Event Column — add_nodal_failure_event","title":"Add Nodal Failure Event Column — add_nodal_failure_event","text":"Adds study-specific nodal failure event indicator column based disease nodal status. EMBRACE-: 'event_nodalcontrol_incl_pao' EMBRACE-II: 'event_nodalfailure'","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Failure Event Column — add_nodal_failure_event","text":"","code":"add_nodal_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Failure Event Column — add_nodal_failure_event","text":"df data frame 'disease_nodal_status_*' columns 'study' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Failure Event Column — add_nodal_failure_event","text":"data frame added nodal failure event column (1=failure, 0=failure)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_nodal_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Failure Event Column — add_nodal_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ test_data <- tibble(   study = c(\"embrace_i\", \"embrace_ii\"),   disease_nodal_status_3m = c(0, 2),   disease_nodal_status_6m = c(0, 0) ) result <- add_nodal_failure_event(test_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","title":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","text":"Calculates number para-aortic lymph nodes per patient staging data adds count new column dataset.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","text":"","code":"add_number_paraaortic_ln_stat_d(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","text":"df data frame containing lymph node information anatomical positions","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","text":"data frame added `number_paraaortic_ln_stat_d` column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_number_paraaortic_ln_stat_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Para-Aortic Lymph Nodes — add_number_paraaortic_ln_stat_d","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- add_number_paraaortic_ln_stat_d(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","title":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","text":"Classifies needle arrangements \"needles\", \"parallel needles\", \"oblique needles\", \"\" based technique data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","text":"","code":"add_parallel_oblique_needles(.data)"},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","text":".data data frame embrace_id fraction technique columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","text":"data frame additional 'icis_parallel_oblique' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parallel_oblique_needles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Parallel or Oblique Needle Classification — add_parallel_oblique_needles","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(embrace_id = c(1, 2, 3),                  fraction_1_technique_tdvh = c(\"1\", \"2\", \"3\"),                  fraction_2_technique_tdvh = c(\"1\", \"2\", \"4\")) add_parallel_oblique_needles(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","title":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","text":"Creates new columns containing maximum parametrial involvement values left right sides different assessment methods.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","text":"","code":"add_parametrial_involvement(data)"},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","text":"data data frame parametrial involvement columns left right sides","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","text":"data frame added maximum parametrial involvement columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_parametrial_involvement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Maximum Parametrial Involvement Columns — add_parametrial_involvement","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   mri_left_parametrium_sta_d = c(0, 1, 2),   mri_right_parametrium_sta_d = c(1, 0, 1) ) result <- add_parametrial_involvement(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Systemic Failure Event Column — add_systemic_failure_event","title":"Add Systemic Failure Event Column — add_systemic_failure_event","text":"Adds study-specific systemic failure event indicator column. EMBRACE-: 'event_systemic_excl_pao' (values 1 2 count events) EMBRACE-II: 'event_systemicfailure' (value 2 counts event)","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Systemic Failure Event Column — add_systemic_failure_event","text":"","code":"add_systemic_failure_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Systemic Failure Event Column — add_systemic_failure_event","text":"df data frame 'disease_systemic_status_*' columns 'study' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Systemic Failure Event Column — add_systemic_failure_event","text":"data frame added systemic failure event columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_systemic_failure_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Systemic Failure Event Column — add_systemic_failure_event","text":"","code":"if (FALSE) { # \\dontrun{ test_data <- tibble(   study = c(\"embrace_i\", \"embrace_ii\"),   disease_systemic_status_3m = c(1, 2),   disease_systemic_status_6m = c(0, 0) ) result <- add_systemic_failure_event(test_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","title":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","text":"Calculates adds time-related columns brachytherapy (BT) external beam radiation therapy (EBRT): time first BT fraction, overall treatment time EBRT, time BT percentage EBRT duration.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","text":"","code":"add_time_to_bt(x)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","text":"x Data frame EBRT dates first BT fraction date","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","text":"Data frame added columns: `time_to_bt`, `ott_ebrt`, `time_to_bt_percent`","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_bt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Time-to-BT and OTT-EBRT Features — add_time_to_bt","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   embrace_id = c(1, 2),   ebrt_start_date_tdvh = as.Date(c(\"2022-01-01\", \"2022-01-15\")),   ebrt_end_date_tdvh = as.Date(c(\"2022-01-31\", \"2022-02-15\")),   fraction01date_tdvh = as.Date(c(\"2022-01-05\", \"2022-01-18\")) ) add_time_to_bt(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Time to Disease Event — add_time_to_diseaseevent","title":"Calculate Time to Disease Event — add_time_to_diseaseevent","text":"Determines latest assessment date disease event calculates follow-time months histology assessment date. disease event found, follow-time calculated histology assessment latest assessment date.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Time to Disease Event — add_time_to_diseaseevent","text":"","code":"add_time_to_diseaseevent(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Time to Disease Event — add_time_to_diseaseevent","text":"df data frame assessment dates disease status information","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Time to Disease Event — add_time_to_diseaseevent","text":"data frame added columns: `latest_assessment_date_disease`,   `timetoevent_disease`, `latest_followup_id`","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_diseaseevent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Time to Disease Event — add_time_to_diseaseevent","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   embrace_id = 1,   assessment_date_3m = as.Date(\"2022-03-01\"),   assessment_date_6m = as.Date(\"2022-06-01\"),   histology_assesment_date = as.Date(\"2022-01-01\"),   disease_local_status_3m = 0,   disease_local_status_6m = 2,   disease_nodal_status_3m = 0,   disease_nodal_status_6m = 0,   disease_systemic_status_3m = 0,   disease_systemic_status_6m = 0 ) result <- add_time_to_diseaseevent(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","title":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","text":"Adds `timetoevent_vitalstatus` column measuring months histology assessment latest vital status date. EMBRACE-, uses latest assessment dates last info date. EMBRACE-II, also considers date death available.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","text":"","code":"add_time_to_last_vitalstatus(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","text":"df data frame histology assessment date vital status information","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","text":"data frame added `timetoevent_vitalstatus` column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_time_to_last_vitalstatus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Time to Last Vital Status — add_time_to_last_vitalstatus","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   embrace_id = 1,   study = \"embrace_i\",   histology_assesment_date = as.Date(\"2020-01-01\"),   vital_status_last_info_date = as.Date(\"2022-06-01\"),   assessment_date_3m = as.Date(\"2020-04-01\") ) result <- add_time_to_last_vitalstatus(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Vital Status Event Column — add_vitalstatus_event","title":"Add Vital Status Event Column — add_vitalstatus_event","text":"Creates updates `event_vitalstatus` column based existing vital status disease assessment data. Uses existing vital status available, otherwise sets 0 disease assessment date exists.","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Vital Status Event Column — add_vitalstatus_event","text":"","code":"add_vitalstatus_event(df)"},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Vital Status Event Column — add_vitalstatus_event","text":"df data frame `vital_status` `latest_assessment_date_disease` columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Vital Status Event Column — add_vitalstatus_event","text":"data frame added updated `event_vitalstatus` column","code":""},{"path":"https://steecker.github.io/embraceR/reference/add_vitalstatus_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Vital Status Event Column — add_vitalstatus_event","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   vital_status = c(1, NA, NA),   latest_assessment_date_disease = c(NA, as.Date(\"2022-01-01\"), NA) ) result <- add_vitalstatus_event(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Changes from Change Log — apply_change_log","title":"Apply Changes from Change Log — apply_change_log","text":"Reads change log file applies recorded changes provided data frame. Automatically converts values appropriate data types based target column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Changes from Change Log — apply_change_log","text":"","code":"apply_change_log(data)"},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Changes from Change Log — apply_change_log","text":"data data frame containing master data","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Changes from Change Log — apply_change_log","text":"data frame changes change log applied","code":""},{"path":"https://steecker.github.io/embraceR/reference/apply_change_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Changes from Change Log — apply_change_log","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame(embrace_id = c(\"001\", \"002\"), value = c(10, 20)) updated_data <- apply_change_log(data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Multiple Nodal Locations — check_multiple_locations","title":"Check for Multiple Nodal Locations — check_multiple_locations","text":"Extends check_nodal_location check multiple locations simultaneously adds results new columns original data frame.","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Multiple Nodal Locations — check_multiple_locations","text":"","code":"check_multiple_locations(.data, locations, time_point = \"any\")"},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Multiple Nodal Locations — check_multiple_locations","text":".data data frame containing patient node data locations Character vector anatomical locations check time_point Character string specifying timepoint check","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Multiple Nodal Locations — check_multiple_locations","text":"Original data frame additional boolean columns location","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_multiple_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Multiple Nodal Locations — check_multiple_locations","text":"","code":"if (FALSE) { # \\dontrun{ # Check for multiple locations locations <- c(\"R int iliac\", \"L int iliac\", \"Para Aortic\") result <- check_multiple_locations(patient_data, locations) } # }"},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Specific Nodal Location — check_nodal_location","title":"Check for Specific Nodal Location — check_nodal_location","text":"Checks whether patients lymph nodes specific anatomical locations, either diagnosis, follow-, time point.","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Specific Nodal Location — check_nodal_location","text":"","code":"check_nodal_location(.data, location, time_point = \"any\")"},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Specific Nodal Location — check_nodal_location","text":".data data frame containing patient node data location Character string specifying anatomical location check time_point Character string specifying timepoint check: \"diagnosis\", \"followup\", \"\" (default)","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Specific Nodal Location — check_nodal_location","text":"tibble patient IDs boolean indicators specified location","code":""},{"path":"https://steecker.github.io/embraceR/reference/check_nodal_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Specific Nodal Location — check_nodal_location","text":"","code":"if (FALSE) { # \\dontrun{ # Check for right internal iliac nodes at any time result <- check_nodal_location(patient_data, \"R int iliac\")  # Check only at diagnosis diagnosis_nodes <- check_nodal_location(patient_data, \"R int iliac\",                                         time_point = \"diagnosis\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean EORTC Column Names — clean_eortc_names","title":"Clean EORTC Column Names — clean_eortc_names","text":"Extracts cleans EORTC column names removing time suffixes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean EORTC Column Names — clean_eortc_names","text":"","code":"clean_eortc_names(df, time_suffix)"},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean EORTC Column Names — clean_eortc_names","text":"df data frame containing EORTC columns time_suffix suffix indicating time point (e.g., \"_3m\")","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean EORTC Column Names — clean_eortc_names","text":"vector cleaned EORTC column names","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_eortc_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean EORTC Column Names — clean_eortc_names","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(eortc_q1_3m = c(1,2,3), eortc_q2_3m = c(3,4,5)) clean_names <- clean_eortc_names(df, \"_3m\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Side Effect Column Names — clean_side_effect_names","title":"Clean Side Effect Column Names — clean_side_effect_names","text":"Extracts cleans side effect column names removing time suffixes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Side Effect Column Names — clean_side_effect_names","text":"","code":"clean_side_effect_names(df, time_suffix = \"_3m\")"},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Side Effect Column Names — clean_side_effect_names","text":"df data frame containing side effect columns time_suffix suffix indicating time point (e.g., \"_3m\")","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Side Effect Column Names — clean_side_effect_names","text":"vector cleaned side effect column names","code":""},{"path":"https://steecker.github.io/embraceR/reference/clean_side_effect_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Side Effect Column Names — clean_side_effect_names","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(bladder_pain_3m = c(1,2,3), gastro_diarrhea_3m = c(0,1,2)) clean_names <- clean_side_effect_names(df, \"_3m\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Styled Excel Report for Patient Side Effects — createStyledExcelSheet","title":"Create Styled Excel Report for Patient Side Effects — createStyledExcelSheet","text":"Generates formatted Excel report conditional formatting based side effect grades, highlighting severe events easy identification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Styled Excel Report for Patient Side Effects — createStyledExcelSheet","text":"","code":"createStyledExcelSheet(data, filePath, sheetName = \"Side Effects\")"},{"path":"https://steecker.github.io/embraceR/reference/createStyledExcelSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Styled Excel Report for Patient Side Effects — createStyledExcelSheet","text":"data DataFrame containing patient side effect data filePath Character, path Excel file saved","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_combined_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Combined Labels for Summary Table — create_combined_labels","title":"Create Combined Labels for Summary Table — create_combined_labels","text":"Helper function create formatted labels recurrence metastases summary table.","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_combined_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Combined Labels for Summary Table — create_combined_labels","text":"","code":"create_combined_labels()"},{"path":"https://steecker.github.io/embraceR/reference/create_combined_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Combined Labels for Summary Table — create_combined_labels","text":"named list labels gtsummary","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Comparative Outcomes Table — create_comparative_outcomes_table","title":"Create Comparative Outcomes Table — create_comparative_outcomes_table","text":"Generates formatted table comparing clinical outcomes EMBRACE-EMBRACE-II studies, including local control, nodal control, survival metrics, time--event data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Comparative Outcomes Table — create_comparative_outcomes_table","text":"","code":"create_comparative_outcomes_table()"},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Comparative Outcomes Table — create_comparative_outcomes_table","text":"gtsummary table outcome comparisons p-values","code":""},{"path":"https://steecker.github.io/embraceR/reference/create_comparative_outcomes_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Comparative Outcomes Table — create_comparative_outcomes_table","text":"","code":"if (FALSE) { # \\dontrun{ outcomes_table <- create_comparative_outcomes_table() } # }"},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status for Embrace I — emi_add_disease_control","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"function adds column indicating disease control events Embrace data, defined either local failure, regional events, systemic events.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"","code":"emi_add_disease_control(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":".data input dataframe containing patient disease control data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_disease_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status for Embrace I — emi_add_disease_control","text":"Original dataframe additional boolean column 'event_disease_control'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"function adds column indicating progression-free survival events, defined either disease event (local failure, regional event, systemic event) death.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"","code":"emi_add_progression_free_survival(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emi_add_progression_free_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status for Embrace I — emi_add_progression_free_survival","text":"Original dataframe additional boolean column 'event_progression_free'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"function adds column indicating cancer-specific death events, defined death (Vital Status = 1) main cause death primary cancer (codes 1 3).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"","code":"emii_add_cancer_specific(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":".data input dataframe containing patient vital status data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cancer-Specific Survival Status — emii_add_cancer_specific","text":"Original dataframe additional boolean column 'event_cancer_specific'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"function adds column indicating cancer-specific death events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"","code":"emii_add_cancer_specific_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":".data input dataframe containing patient vital status data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"tibble cancer-specific survival variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_cancer_specific_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Cancer-Specific Survival Status with Verification — emii_add_cancer_specific_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_vitalstatus = c(1, 1, 0),   vital_status_cause_of_death_vital_status = c(1, 2, NA) ) result <- emii_add_cancer_specific_with_verification(data) result <- emii_add_cancer_specific_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","title":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","text":"Adds boolean columns possible nodal locations diagnosis identify initial disease patterns EMBRACE-II patients.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","text":"","code":"emii_add_diagnostic_nodes(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","text":".data data frame containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","text":"Data frame additional boolean columns nodal location diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_diagnostic_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Diagnostic Node Locations — emii_add_diagnostic_nodes","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_diagnostic_nodes(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status — emii_add_disease_control","title":"Add Disease Control Status — emii_add_disease_control","text":"function adds column indicating disease control events, defined either local failure, nodal failure, systemic failure.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status — emii_add_disease_control","text":"","code":"emii_add_disease_control(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status — emii_add_disease_control","text":".data input dataframe containing patient disease control data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status — emii_add_disease_control","text":"Original dataframe additional boolean column 'event_disease_control'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"function adds column indicating disease control events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"","code":"emii_add_disease_control_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":".data input dataframe containing patient disease control data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"tibble disease control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_disease_control_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Disease Control Status with Verification — emii_add_disease_control_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_localfailure = c(TRUE, FALSE, FALSE),   event_nodalfailure = c(FALSE, TRUE, FALSE),   event_systemicfailure = c(FALSE, FALSE, TRUE) ) result <- emii_add_disease_control_with_verification(data) result <- emii_add_disease_control_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Distant Alone Status — emii_add_distant_alone","title":"Add Distant Alone Status — emii_add_distant_alone","text":"function adds column indicating whether patient distant metastases alone, defined systemic failure without para-aortic nodes local nodal failures.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Distant Alone Status — emii_add_distant_alone","text":"","code":"emii_add_distant_alone(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Distant Alone Status — emii_add_distant_alone","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Distant Alone Status — emii_add_distant_alone","text":"Original dataframe additional boolean column 'distant_alone'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"function adds column indicating whether patient distant metastases alone returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"","code":"emii_add_distant_alone_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"tibble distant alone variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_distant_alone_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Distant Alone Status with Verification — emii_add_distant_alone_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_systemicfailure = c(TRUE, FALSE),   has_paraaortic_nodes_above_l2 = c(FALSE, TRUE),   event_paraaortic_nodal = c(FALSE, FALSE),   event_localfailure = c(FALSE, FALSE),   event_pelvic_nodal = c(FALSE, FALSE) ) result <- add_distant_alone_with_verification(data) result <- add_distant_alone_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","title":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","text":"Analyzes patient data determine appropriate elective radiation targets based nodal involvement, tumor characteristics, risk factors. Categorizes patients treatment target groups (Small Pelvis, Large Pelvis, Large Pelvis + Para-aortic, etc.) based established clinical criteria.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","text":"","code":"emii_add_elective_targets(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","text":".data EMBRACE-II data frame required clinical pathological information","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","text":"Data frame added columns risk classification recommended   elective target volumes","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_elective_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Elective Target Analysis for EMBRACE-II — emii_add_elective_targets","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_elective_targets(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Classification — emii_add_nodal_classification","title":"Add Nodal Classification — emii_add_nodal_classification","text":"Adds new column classifying nodal status 'N0', 'N1PAN', 'N1pelvic' based pathological nodes present Para-Aortic lymph node status diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Classification — emii_add_nodal_classification","text":"","code":"emii_add_nodal_classification(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Classification — emii_add_nodal_classification","text":".data data frame containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Classification — emii_add_nodal_classification","text":"Data frame additional 'nodal_classification' column","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodal_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Classification — emii_add_nodal_classification","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_nodal_classification(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"function creates new disease event variable endpoint \"Nodal control (incl. para-aortic)\" based EMBRACE-II data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"","code":"emii_add_nodalcontrol_incl_pao(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"data tibble containing EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"tibble new disease event variable added","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Control (incl. para-aortic) Event Variable — emii_add_nodalcontrol_incl_pao","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Create sample data data <- tibble(   event_pelvic_nodal = c(0L, 1L, 0L, 1L),   event_paraaortic_nodal = c(0L, 0L, 1L, 1L) )  # Apply the function result <- emii_add_nodalcontrol_incl_pao(data) #> Error in emii_add_nodalcontrol_incl_pao(data): could not find function \"emii_add_nodalcontrol_incl_pao\" print(result) #> Error: object 'result' not found"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"function creates new disease event variable returns tibble created column columns used function verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"","code":"emii_add_nodalcontrol_incl_pao_with_verification(data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"data tibble containing EMBRACE-II data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"tibble new disease event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_nodalcontrol_incl_pao_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Nodal Control (incl. para-aortic) Event Variable with Verification — emii_add_nodalcontrol_incl_pao_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_pelvic_nodal = c(0L, 1L),   event_paraaortic_nodal = c(0L, 1L) ) result <- emii_add_nodalcontrol_incl_pao_with_verification(data) result <- emii_add_nodalcontrol_incl_pao_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","title":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","text":"Calculates number common iliac lymph nodes (left right) per patient staging data adds count new column dataset.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","text":"","code":"emii_add_number_common_iliac_ln_stat_d(df)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","text":"df data frame containing lymph node information anatomical positions","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","text":"data frame added `number_common_iliac_ln_stat_d` column","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_number_common_iliac_ln_stat_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Common Iliac Lymph Nodes — emii_add_number_common_iliac_ln_stat_d","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_number_common_iliac_ln_stat_d(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"function calculates overall treatment time (OTT) days dataset containing EBRT start end dates, fraction dates. OTT computed EBRT start date last available treatment date, considering `ebrt_end_date_tdvh` fraction date columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"","code":"emii_add_ott(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"data data frame containing treatment data. Must include `ebrt_start_date_tdvh`, `ebrt_end_date_tdvh`, columns representing fraction dates names containing \"fraction\" \"date\".","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"data frame two additional columns: `last_treatment_date`: latest treatment date row. `ott_days`: overall treatment time days (numeric).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_ott.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Overall Treatment Time (OTT) to a Data Frame — emii_add_ott","text":"","code":"library(dplyr) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union emii <- tibble(   embrace_id = c(\"AAR2001\", \"VIE2001\"),   ebrt_start_date_tdvh = as.POSIXct(c(\"2016-11-04\", \"2016-03-30\")),   ebrt_end_date_tdvh = as.POSIXct(c(\"2016-12-08\", \"2016-05-03\")),   fraction01date_tdvh = as.POSIXct(c(\"2016-12-19\", \"2016-05-10\")),   fraction02date_tdvh = as.POSIXct(c(\"2016-12-27\", \"2016-05-11\")) ) emii_add_ott(emii) #> Error in emii_add_ott(emii): could not find function \"emii_add_ott\""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","title":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","text":"Applies endpoint definitions raw EMBRACE-II data, creating comprehensive dataset outcome measures.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","text":"","code":"emii_add_outcome(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","text":".data data frame containing raw EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","text":"data frame additional outcome columns various endpoints:   - Nodal recurrence classification   - Pelvic nodal events   - Systemic events (excluding para-aortic)   - Para-aortic nodal events   - Locoregional events   - Cancer-specific survival   - Disease control   - Progression-free survival   - Distant metastasis","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add All EMBRACE-II Outcome Endpoints — emii_add_outcome","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() outcome_data <- emii_add_outcome(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"function adds column indicating whether patient para-aortic nodal involvement, defined either para-aortic metastases para-aortic nodal failure follow-.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"","code":"emii_add_paraaortic_nodal(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Para-aortic Nodal Control Status — emii_add_paraaortic_nodal","text":"Original dataframe additional boolean column 'event_paraaortic_nodal'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"function adds column indicating whether patient para-aortic nodal involvement returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"","code":"emii_add_paraaortic_nodal_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"tibble para-aortic nodal control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_paraaortic_nodal_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Para-aortic Nodal Control Status with Verification — emii_add_paraaortic_nodal_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   has_paraaortic_metastases = c(TRUE, FALSE),   has_Para.Aortic_followup = c(FALSE, TRUE) ) result <- emii_add_paraaortic_nodal_with_verification(data) result <- emii_add_paraaortic_nodal_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Composite Pelvic Event Status — emii_add_pelvic_event","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"function adds column indicating whether patient pelvic event, defined either local failure pelvic nodal event.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"","code":"emii_add_pelvic_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Composite Pelvic Event Status — emii_add_pelvic_event","text":"Original dataframe additional boolean column 'event_pelvic'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"function adds column indicating whether patient pelvic event returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"","code":"emii_add_pelvic_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"tibble pelvic event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pelvic Event Status with Verification — emii_add_pelvic_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_localfailure = c(TRUE, FALSE),   event_pelvic_nodal = c(FALSE, TRUE) ) result <- emii_add_pelvic_event_with_verification(data) result <- emii_add_pelvic_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"function adds column indicating whether patient pelvic nodal event. pelvic nodal event defined event_nodalfailure least one positive node following locations: external iliac, internal iliac, common iliac, parametrial/paracervical regions (left right).","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"","code":"emii_add_pelvic_nodal_event(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":".data input dataframe containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Nodal Event Status — emii_add_pelvic_nodal_event","text":"Original dataframe additional boolean column 'event_pelvic_nodal'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"function adds column indicating whether patient pelvic nodal event returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"","code":"emii_add_pelvic_nodal_event_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":".data input dataframe containing patient node data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"tibble pelvic nodal event variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_pelvic_nodal_event_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pelvic Nodal Event Status with Verification — emii_add_pelvic_nodal_event_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_nodalfailure = c(TRUE, FALSE),   has_Para.Aortic_followup = c(FALSE, TRUE),   has_other_followup = c(FALSE, FALSE),   has_L.groin_followup = c(FALSE, FALSE),   has_R.groin_followup = c(FALSE, FALSE) ) result <- emii_add_pelvic_nodal_event_with_verification(data) result <- emii_add_pelvic_nodal_event_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status — emii_add_progression_free_survival","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"function adds column indicating progression-free survival events, defined either disease event (local failure, nodal control including PAO, systemic excluding PAO) death.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"","code":"emii_add_progression_free_survival(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":".data input dataframe containing patient event data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status — emii_add_progression_free_survival","text":"Original dataframe additional boolean column 'event_progression_free'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"function adds column indicating progression-free survival events returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"","code":"emii_add_progression_free_survival_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":".data input dataframe containing patient event data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"tibble progression-free survival variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_progression_free_survival_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Progression-Free Survival Status with Verification — emii_add_progression_free_survival_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\", \"A3\"),   event_disease_control = c(TRUE, FALSE, FALSE),   event_vitalstatus = c(0, 1, 0) ) result <- emii_add_progression_free_survival_with_verification(data) result <- emii_add_progression_free_survival_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Recurrent Node Locations — emii_add_recurrent_nodes","title":"Add Recurrent Node Locations — emii_add_recurrent_nodes","text":"Adds boolean columns possible nodal locations follow-identify recurrent disease patterns EMBRACE-II patients.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Recurrent Node Locations — emii_add_recurrent_nodes","text":"","code":"emii_add_recurrent_nodes(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Recurrent Node Locations — emii_add_recurrent_nodes","text":".data data frame containing patient node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Recurrent Node Locations — emii_add_recurrent_nodes","text":"Data frame additional boolean columns nodal location follow-","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_recurrent_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Recurrent Node Locations — emii_add_recurrent_nodes","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_recurrent_nodes(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"function adds column indicating whether patient systemic failure, defined systemic failure least one following: supraclavicular nodes, mediastinal nodes, liver metastases, bone metastases, brain metastases, lung metastases, abdominal carcinomatosis, metastases.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"","code":"emii_add_systemic_excl_pao(.data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":".data input dataframe containing patient failure data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Systemic Control Status (Excluding Para-aortic) — emii_add_systemic_excl_pao","text":"Original dataframe additional boolean column 'event_systemic_excl_pao'","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"function adds column indicating whether patient systemic failure returns tibble created column columns used verification.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"","code":"emii_add_systemic_excl_pao_with_verification(.data, save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":".data input dataframe containing patient failure data save_excel Logical indicating whether save results Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"tibble systemic control variable relevant columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_systemic_excl_pao_with_verification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Systemic Control Status (Excluding Para-aortic) with Verification — emii_add_systemic_excl_pao_with_verification","text":"","code":"if (FALSE) { # \\dontrun{ data <- tibble(   embrace_id = c(\"A1\", \"A2\"),   event_systemicfailure = c(TRUE, FALSE),   has_liver_metastases = c(TRUE, FALSE),   has_bone_metastases = c(FALSE, TRUE) ) result <- emii_add_systemic_excl_pao_with_verification(data) result <- emii_add_systemic_excl_pao_with_verification(data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Absolute TRAK Values — emii_add_trak_absolute","title":"Calculate Absolute TRAK Values — emii_add_trak_absolute","text":"Calculates absolute Total Reference Air Kerma (TRAK) values tandem applicator, vaginal applicator, needles across brachytherapy fractions. Converts percentage contributions absolute values cGy 1m provides fraction-specific total TRAK metrics.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Absolute TRAK Values — emii_add_trak_absolute","text":"","code":"emii_add_trak_absolute(df, num_fractions = 7)"},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Absolute TRAK Values — emii_add_trak_absolute","text":"df data frame containing TRAK percentage columns multiple fractions num_fractions Number fractions process (default: 7)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Absolute TRAK Values — emii_add_trak_absolute","text":"data frame added columns:   - Fraction-specific absolute values component   - Total sum columns: trak_tandem_applicator_sum, trak_vaginal_applicator_sum,     trak_needles_sum, trak_total_sum","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_add_trak_absolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Absolute TRAK Values — emii_add_trak_absolute","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() result <- emii_add_trak_absolute(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_create_elective_targets_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","title":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","text":"Generates formatted table comparing algorithm-recommended elective targets actually selected treatment centers. Shows distribution treatment field selections highlights potential discrepancies recommendations clinical practice.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_create_elective_targets_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","text":"","code":"emii_create_elective_targets_table(   data,   save_excel = FALSE,   file_path = \"emii_elective_targets.xlsx\" )"},{"path":"https://steecker.github.io/embraceR/reference/emii_create_elective_targets_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","text":"data EMBRACE-II data frame elective target information save_excel Logical; TRUE, saves table data Excel file (default: FALSE) file_path File path Excel output (default: \"emii_elective_targets.xlsx\")","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_create_elective_targets_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","text":"gt table object comparing algorithm-recommended vs. selected elective targets","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_create_elective_targets_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Elective Targets Comparison Table — emii_create_elective_targets_table","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() %>% emii_add_elective_targets() comparison_table <- emii_create_elective_targets_table(emii_data) comparison_table <- emii_create_elective_targets_table(emii_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"function analyzes numeric columns dataset identifies extreme outliers using interquartile range (IQR) method. extreme outlier defined value 3 times IQR Q1 Q3.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"","code":"emii_find_outliers(   data,   iqr_multiplier = 3,   save_excel = FALSE,   excel_path = NULL )"},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"data tibble containing EMBRACE-II data iqr_multiplier Numeric; multiplier IQR define outlier threshold (default: 3) save_excel Logical; TRUE, saves outliers Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"tibble containing outlier information (embrace_id, variable, value, threshold, median)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_find_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Extreme Outliers in EMBRACE-II Data — emii_find_outliers","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   outliers <- emii_find_outliers(clean_data)   outliers <- emii_find_outliers(clean_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"function loads EMBRACE-II data processes create clean dataset ready final analysis. applies necessary transformations filters.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"","code":"emii_get_clean_data(save_excel = FALSE, excel_path = NULL)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"save_excel Logical; TRUE, saves data frame Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"tibble containing cleaned EMBRACE-II data selected columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Clean EMBRACE-II Data for Analysis — emii_get_clean_data","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   clean_data <- emii_get_clean_data(save_excel = TRUE)   clean_data <- emii_get_clean_data(save_excel = TRUE, excel_path = \"my_data.xlsx\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Status of Critical Parameters — emii_get_critical_parameter_status","title":"Get Status of Critical Parameters — emii_get_critical_parameter_status","text":"Generates summary table comparing critical parameters EMBRACE II datasets. function analyzes key clinical treatment parameters, calculates proportion missing data parameter, performs statistical comparisons two study cohorts.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Status of Critical Parameters — emii_get_critical_parameter_status","text":"","code":"emii_get_critical_parameter_status(save_excel = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Status of Critical Parameters — emii_get_critical_parameter_status","text":"save_excel Logical; TRUE, saves summary table Excel file (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Status of Critical Parameters — emii_get_critical_parameter_status","text":"gtsummary object containing combined summary table p-values","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_critical_parameter_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Status of Critical Parameters — emii_get_critical_parameter_status","text":"","code":"if (FALSE) { # \\dontrun{ # Generate summary table summary_table <- emii_get_critical_parameter_status()  # Generate and save to Excel summary_table <- emii_get_critical_parameter_status(save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Dosimetric Parameters Between EMBRACE-I and EMBRACE-II — emii_get_dosimetric_parameter_status","title":"Compare Dosimetric Parameters Between EMBRACE-I and EMBRACE-II — emii_get_dosimetric_parameter_status","text":"Generates summary table comparing dosimetric parameters EMBRACE-EMBRACE-II datasets. function selects relevant dosimetric parameters studies, combines , performs statistical comparisons identify significant differences two cohorts.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Dosimetric Parameters Between EMBRACE-I and EMBRACE-II — emii_get_dosimetric_parameter_status","text":"","code":"emii_get_dosimetric_parameter_status()"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Dosimetric Parameters Between EMBRACE-I and EMBRACE-II — emii_get_dosimetric_parameter_status","text":"gtsummary object containing comparative summary table p-values","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_dosimetric_parameter_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Dosimetric Parameters Between EMBRACE-I and EMBRACE-II — emii_get_dosimetric_parameter_status","text":"","code":"if (FALSE) { # \\dontrun{ # Generate dosimetric parameter comparison table summary_table <- emii_get_dosimetric_parameter_status() } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"function identifies first timepoint patient achieves remission based gynecological examination (gyn_remission_status == 1) extracts corresponding gynecological measurements variables timepoint.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"","code":"emii_get_gyn_remission_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"data tibble containing EMBRACE-II follow-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"tibble remission timepoint data (embrace_id, timepoint, gynecological measurements)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_gyn_remission_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up (Gynecological Examination) — emii_get_gyn_remission_data","text":"","code":"if (FALSE) { # \\dontrun{   followup_data <- load_embrace_ii_followup()   gyn_remission_data <- emii_get_gyn_remission_data(followup_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","title":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","text":"Takes dataframe wide-format lymph node data, pivots specified columns long format, recodes anatomical positions, returns new dataframe row represents single positive lymph node EMBRACE-II diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","text":"","code":"emii_get_lymph_nodes_statd(df)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","text":"df dataframe containing patient data lymph node information","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","text":"dataframe long-format one row per positive lymph node,   including recoded anatomical position descriptions","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_lymph_nodes_statd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Lymph Node Data to Long Format — emii_get_lymph_nodes_statd","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() ln_data <- emii_get_lymph_nodes_statd(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"function identifies first timepoint patient achieves remission (mri_remission_status_primary == 1) extracts corresponding MRI measurements variables timepoint.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"","code":"emii_get_remission_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"data tibble containing EMBRACE-II follow-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"tibble remission timepoint data (embrace_id, timepoint, MRI measurements)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_remission_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract First Remission Timepoint Data from EMBRACE-II Follow-up — emii_get_remission_data","text":"","code":"if (FALSE) { # \\dontrun{   followup_data <- load_embrace_ii_followup()   remission_data <- emii_get_remission_data(followup_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"function creates summary statistics table EMBRACE-II data customized formatting. combines mean, SD, median, IQR, range statistics single row per variable includes section information based variable suffixes.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"","code":"emii_get_summary_statistics(data, save_excel = FALSE, excel_path = NULL)"},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"data tibble containing EMBRACE-II data save_excel Logical; TRUE, saves data frame Excel file excel_path Character; path save Excel file (default: NULL)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"tibble containing summarized statistics one row per variable, including section information","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_get_summary_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Summary Statistics Table for EMBRACE-II Data — emii_get_summary_statistics","text":"","code":"if (FALSE) { # \\dontrun{   clean_data <- emii_get_clean_data()   summary_stats <- emii_get_summary_statistics(clean_data)   summary_stats <- emii_get_summary_statistics(clean_data, save_excel = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify All Event Calculations — emii_verify_all_events","title":"Verify All Event Calculations — emii_verify_all_events","text":"Runs event verification functions combines results single Excel workbook multiple sheets. Provides comprehensive validation disease events, survival outcomes, failure patterns EMBRACE-II data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify All Event Calculations — emii_verify_all_events","text":"","code":"emii_verify_all_events(save_excel = TRUE)"},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify All Event Calculations — emii_verify_all_events","text":"save_excel Logical; whether save results Excel file (default: TRUE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify All Event Calculations — emii_verify_all_events","text":"list containing verification results element representing   different event verification dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/emii_verify_all_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify All Event Calculations — emii_verify_all_events","text":"","code":"if (FALSE) { # \\dontrun{ results <- emii_verify_all_events() results <- emii_verify_all_events(save_excel = FALSE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data for Specific CTCAE Grade Events — filter_grade_threshold","title":"Filter Data for Specific CTCAE Grade Events — filter_grade_threshold","text":"Filters dataframe identify rows side effect values meeting specified grade threshold, retaining relevant clinical information analysis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data for Specific CTCAE Grade Events — filter_grade_threshold","text":"","code":"filter_grade_threshold(df, side_effect_cols, grade_threshold = 4)"},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data for Specific CTCAE Grade Events — filter_grade_threshold","text":"df DataFrame containing patient data side_effect_cols Character vector specifying side effect columns check grade_threshold Numeric, CTCAE grade threshold filter (default: 4)","code":""},{"path":"https://steecker.github.io/embraceR/reference/filter_grade_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data for Specific CTCAE Grade Events — filter_grade_threshold","text":"DataFrame containing rows events meeting threshold criteria","code":""},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Excel Reports for Patients with Grade-Specific Events — generateExcelReportsForPatients","title":"Generate Excel Reports for Patients with Grade-Specific Events — generateExcelReportsForPatients","text":"Processes patient data identify side effects meeting specified grade threshold, generates formatted Excel reports clinical review.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Excel Reports for Patients with Grade-Specific Events — generateExcelReportsForPatients","text":"","code":"generateExcelReportsForPatients(data, outputDir, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/generateExcelReportsForPatients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Excel Reports for Patients with Grade-Specific Events — generateExcelReportsForPatients","text":"data DataFrame containing complete patient dataset outputDir Character, output directory Excel reports grade_threshold Numeric, CTCAE grade threshold filter ","code":""},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Patient Excel Reports — generatePatientExcelReports","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"Creates individual Excel reports patient filtered dataset, organizing files center ID appropriate subfolders.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"","code":"generatePatientExcelReports(df_filtered, root_folder)"},{"path":"https://steecker.github.io/embraceR/reference/generatePatientExcelReports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Patient Excel Reports — generatePatientExcelReports","text":"df_filtered DataFrame containing filtered patient data root_folder Character, root directory saving reports","code":""},{"path":"https://steecker.github.io/embraceR/reference/generate_morbidity_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","title":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","text":"Processes EMBRACE-II data identify patients side effects meeting specified grade threshold, generates formatted Excel reports clinical review.","code":""},{"path":"https://steecker.github.io/embraceR/reference/generate_morbidity_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","text":"","code":"generate_morbidity_reports(   grade_threshold = 4,   output_dir = paste0(\"Grade\", grade_threshold, \"/\") )"},{"path":"https://steecker.github.io/embraceR/reference/generate_morbidity_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","text":"grade_threshold Numeric, CTCAE grade threshold filter (default: 4) output_dir Character, output directory Excel reports (default: \"Gradethreshold/\")","code":""},{"path":"https://steecker.github.io/embraceR/reference/generate_morbidity_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","text":"Invisible NULL, called side effect generating Excel reports","code":""},{"path":"https://steecker.github.io/embraceR/reference/generate_morbidity_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Excel Reports for Grade-Specific Morbidity Events — generate_morbidity_reports","text":"","code":"if (FALSE) { # \\dontrun{ # Generate reports for Grade 4 events generate_morbidity_reports(4)  # Generate reports for Grade 3 events with custom output directory generate_morbidity_reports(3, \"Grade3_Reports/\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","title":"Combine Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"Loads combines outcome data EMBRACE studies, ensuring consistent variable names structure comparative analysis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"","code":"get_combined_outcomes()"},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"tibble containing combined outcome data studies :   - Time--event variables disease progression vital status   - Event indicators various failure types (local, nodal, systemic)   - Event indicators specific anatomical locations   - Composite endpoint indicators (locoregional, distant, disease control)   - 'study' identifier column distinguish cohorts","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_combined_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Outcomes Data from EMBRACE-I and EMBRACE-II — get_combined_outcomes","text":"","code":"if (FALSE) { # \\dontrun{ combined_data <- get_combined_outcomes() table(combined_data$study) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Side Effects — get_latest_side_effects","title":"Get Latest Side Effects — get_latest_side_effects","text":"Extracts recent side effect values patient based follow-data.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Side Effects — get_latest_side_effects","text":"","code":"get_latest_side_effects(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Side Effects — get_latest_side_effects","text":"df data frame containing side effect follow-columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Side Effects — get_latest_side_effects","text":"data frame new columns latest side effects","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_latest_side_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Latest Side Effects — get_latest_side_effects","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   embrace_id = 1:3,   latest_followup_id = c(\"3\", \"6\", \"12\"),   bladder_pain_3m = c(1,2,3),   bladder_pain_6m = c(2,1,NA),   bladder_pain_12m = c(NA,NA,1) ) result <- get_latest_side_effects(df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"function computes maximum two numeric columns observation. NA values handled one value NA , non-NA value returned. values NA, NA returned.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"","code":"get_max_of_two_columns(df, col1, col2)"},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"df data frame least two numeric columns. col1 name first numeric column. col2 name second numeric column.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_of_two_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the maximum of two numeric columns for each observation. — get_max_of_two_columns","text":"numeric vector containing maximum value observation.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Maximum Side Effects — get_max_side_effects","title":"Get Maximum Side Effects — get_max_side_effects","text":"Identifies maximum grade side effect corresponding timepoint.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Maximum Side Effects — get_max_side_effects","text":"","code":"get_max_side_effects(   df,   endpoints,   max_grade = 0,   export_to_excel = FALSE,   file_name = \"max_side_effects.xlsx\" )"},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Maximum Side Effects — get_max_side_effects","text":"df data frame side effect columns across multiple timepoints endpoints character vector endpoint basenames max_grade Numeric threshold filtering results export_to_excel Whether export results Excel file_name Name Excel file exporting","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Maximum Side Effects — get_max_side_effects","text":"data frame maximum side effect values timepoints","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_max_side_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Maximum Side Effects — get_max_side_effects","text":"","code":"if (FALSE) { # \\dontrun{ endpoints <- c(\"bladder_pain\", \"gastro_diarrhea\") result <- get_max_side_effects(patient_data, endpoints, max_grade=2) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","title":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"Creates formatted summary table showing number percentage patients least one lymph node anatomical location EMBRACE-II diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"","code":"get_nodal_location_patient_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"df dataframe containing EMBRACE-II dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"gt table object showing distribution patients lymph nodes location","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_patient_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Patient-Level Summary of Nodal Anatomical Locations — get_nodal_location_patient_summary","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() patient_summary <- get_nodal_location_patient_summary(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"Creates formatted summary table showing frequency percentage anatomical location nodal dataset EMBRACE-II diagnosis.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"","code":"get_nodal_location_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"df dataframe containing EMBRACE-II dataset","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"gt table object showing distribution lymph node locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_nodal_location_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Summary Table of Nodal Anatomical Locations — get_nodal_location_summary","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() summary_table <- get_nodal_location_summary(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","title":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","text":"Creates formatted summary table showing number percentage patients recurrent lymph nodes metastases follow-EMBRACE-II.","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","text":"","code":"get_recurrence_and_metastases_summary(df)"},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","text":"df data frame containing EMBRACE-II data follow-information","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","text":"gt table object showing distribution recurrences metastases","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_recurrence_and_metastases_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Recurrence and Metastases Summary — get_recurrence_and_metastases_summary","text":"","code":"if (FALSE) { # \\dontrun{ emii_data <- load_embrace_ii() summary_table <- get_recurrence_and_metastases_summary(emii_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Valid Node Locations — get_valid_locations","title":"Get Valid Node Locations — get_valid_locations","text":"Returns vector valid anatomical locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Valid Node Locations — get_valid_locations","text":"","code":"get_valid_locations()"},{"path":"https://steecker.github.io/embraceR/reference/get_valid_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Valid Node Locations — get_valid_locations","text":"Character vector valid anatomical locations","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","title":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","text":"Loads data EMBRACE-EMBRACE-II studies, processes , combines single dataframe harmonized column names.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","text":"","code":"load_combined_embrace(   file_path_i = here::here(\"data_raw/embrace_I\"),   file_path_ii = here::here(\"data_raw/embrace_II/emii.xlsx\"),   file_path_eqd2 = here::here(\"data_raw/embrace_II/emii_eqd2.xlsx\"),   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   return_common_columns = T )"},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","text":"file_path_i Character, path EMBRACE-data root folder file_path_ii Character, path EMBRACE-II Excel file file_path_eqd2 Character, path EMBRACE-II EQD2 Excel file mapping_file Character, path column mapping table Excel file return_common_columns Logical, TRUE, return columns present datasets","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","text":"tibble containing cleaned combined data studies","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_combined_embrace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Combine EMBRACE-I and EMBRACE-II Data — load_combined_embrace","text":"","code":"if (FALSE) { # \\dontrun{ # Load with default paths combined_data <- load_combined_embrace()  # Load with custom paths and return all columns combined_data <- load_combined_embrace(   file_path_i = \"path/to/embrace_I\",   file_path_ii = \"path/to/emii.xlsx\",   file_path_eqd2 = \"path/to/emii_eqd2.xlsx\",   mapping_file = \"path/to/mapping_table.xlsx\",   return_common_columns = FALSE ) } # }"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process EMBRACE-I Data — load_embrace_i","title":"Load and Process EMBRACE-I Data — load_embrace_i","text":"Loads data multiple sources EMBRACE-study, processes , joins `embrace_id` column. function handles T-stage data, morbidity outcomes, main study data, combining comprehensive dataset.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process EMBRACE-I Data — load_embrace_i","text":"","code":"load_embrace_i(   file_path = here::here(\"data_raw/embrace_I\"),   add_new_columns = TRUE,   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   filter_cohort = TRUE )"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process EMBRACE-I Data — load_embrace_i","text":"file_path Character, path directory containing primary data files add_new_columns Logical, TRUE, calculate add derived columns (default: TRUE) mapping_file Character, path column mapping table file filter_cohort Logical, TRUE, filter include patients local failure data (default: TRUE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process EMBRACE-I Data — load_embrace_i","text":"tibble containing cleaned joined EMBRACE-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process EMBRACE-I Data — load_embrace_i","text":"","code":"if (FALSE) { # \\dontrun{   # Load with default settings   df <- load_embrace_i()      # Load without filtering cohort   df <- load_embrace_i(filter_cohort = FALSE)      # Load with custom mapping file   df <- load_embrace_i(mapping_file = \"path/to/custom_mapping.xlsx\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process EMBRACE-II Data — load_embrace_ii","title":"Load and Process EMBRACE-II Data — load_embrace_ii","text":"Loads data EMBRACE-II website exports, processes , joins `embrace_id` column. function handles multiple data sheets including patient information, registration, diagnosis status, baseline morbidity, treatment data, vital status.","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process EMBRACE-II Data — load_embrace_ii","text":"","code":"load_embrace_ii(   file_path = here::here(\"data_raw/embrace_II/emii.xlsx\"),   file_path_eqd2 = here::here(\"data_raw/embrace_II/emii_eqd2.xlsx\"),   add_new_columns = TRUE,   mapping_file = here::here(\"data_raw/mapping_table/mapping_table.xlsx\"),   include_only_study_patients = TRUE,   replace_minusone_with_na = TRUE )"},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process EMBRACE-II Data — load_embrace_ii","text":"file_path Character, path directory containing primary data files file_path_eqd2 Character, path EMBRACE-II EQD2 Excel file add_new_columns Logical, TRUE, calculate add derived columns (default: TRUE) mapping_file Character, path column mapping table file include_only_study_patients Logical, TRUE, return patients included study (default: TRUE) replace_minusone_with_na Logical, TRUE, replace -1 values NA (default: TRUE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process EMBRACE-II Data — load_embrace_ii","text":"tibble containing cleaned joined EMBRACE-II data","code":""},{"path":"https://steecker.github.io/embraceR/reference/load_embrace_ii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process EMBRACE-II Data — load_embrace_ii","text":"","code":"if (FALSE) { # \\dontrun{   # Load with default settings   df <- load_embrace_ii()      # Load all patients, including those excluded from the study   df <- load_embrace_ii(include_only_study_patients = FALSE)      # Load with custom file paths   df <- load_embrace_ii(     file_path = \"path/to/emii.xlsx\",      file_path_eqd2 = \"path/to/emii_eqd2.xlsx\"   ) } # }"},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"function renames columns given dataframe based mapping table. mapping table contain old column names new column names mapped .","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"","code":"map_column_names(data, mapping, study = \"emi\")"},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"data dataframe whose columns renamed. mapping dataframe containing least two columns: `embrace_i_column` Embrace dataset column names, `embrace_ii_column` Embrace II dataset column names. study name study","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"dataframe columns renamed based mapping table.","code":""},{"path":"https://steecker.github.io/embraceR/reference/map_column_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Columns in a Dataframe Based on a Mapping Table — map_column_names","text":"","code":"if (FALSE) { # \\dontrun{   mapping <- data.frame(embrace_i_column = c('col1', 'col2'),                         embrace_ii_column = c('column1', 'column2'),                         new_combined_name = c('new_col1', 'new_col2'))   data <- data.frame(col1 = 1:5, col2 = 6:10)   new_data <- map_columns_based_on_mapping(data, mapping) } # }"},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a Specific Row to a New Position — move_row","title":"Move a Specific Row to a New Position — move_row","text":"function moves specified row dataframe new position.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a Specific Row to a New Position — move_row","text":"","code":"move_row(df, row_from, row_to)"},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a Specific Row to a New Position — move_row","text":"df dataframe containing data. row_from index row move. row_to new index row.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a Specific Row to a New Position — move_row","text":"dataframe row moved new position.","code":""},{"path":"https://steecker.github.io/embraceR/reference/move_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move a Specific Row to a New Position — move_row","text":"","code":"if (FALSE) { # \\dontrun{ df <- tibble::tibble(   a = 1:5,   b = letters[1:5] ) new_df <- move_row(df, 5, 2) print(new_df) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform Combined EMBRACE Data — process_combined_data","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"Applies series data transformations combined EMBRACE dataset create derived variables needed analysis. function serves pipeline sequentially applies multiple data processing functions :","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"","code":"process_combined_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"data tibble dataframe containing combined EMBRACE data processed","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"tibble additional derived columns analysis","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"1. Add ICIS (International Cervical Cancer Imaging Score) values 2. Calculate average active needles used brachytherapy 3. Compute time diagnosis brachytherapy 4. Determine parametrial involvement status 5. Create HRCTV volume bins stratification 6. Calculate maximum tumor dimension 7. Add patient age diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_combined_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform Combined EMBRACE Data — process_combined_data","text":"","code":"if (FALSE) { # \\dontrun{   # Load combined data   combined_data <- load_combined_embrace()      # Apply all transformations   processed_data <- process_combined_data(combined_data)      # Check new columns   names(processed_data)[!names(processed_data) %in% names(combined_data)] } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform EMBRACE-I Data — process_emi_data","title":"Process and Transform EMBRACE-I Data — process_emi_data","text":"Standardizes column naming conventions EMBRACE-data reformatting fraction numbers ensure consistent two-digit representation.","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform EMBRACE-I Data — process_emi_data","text":"","code":"process_emi_data(data)"},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform EMBRACE-I Data — process_emi_data","text":"data tibble dataframe containing EMBRACE-data","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform EMBRACE-I Data — process_emi_data","text":"tibble standardized column names","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform EMBRACE-I Data — process_emi_data","text":"","code":"if (FALSE) { # \\dontrun{   emi_data <- load_embrace_i()   processed_data <- process_emi_data(emi_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Transform EMBRACE-II Data — process_emii_data","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"Performs comprehensive preprocessing EMBRACE-II data. function adds EMBRACE-II specific columns common columns added via process_combined_data. processing includes:","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"","code":"process_emii_data(   data,   file_path = here::here(\"data_raw/embrace_II/2023-01-18_emii_masterdump.Rds\") )"},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"data tibble dataframe containing combined data processed file_path Path EMBRACE-II master dump file (default uses ::)","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"tibble additional EMBRACE-II specific columns","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"1. Adding T-Score data 2. Calculating TRAK (Total Reference Air Kerma) absolute values 3. Classifying needle arrangements (parallel/oblique) 4. Computing overall treatment time (OTT) 5. Adding elective target information 6. Identifying patients lost follow-withdrew consent 7. Adding disease event indicators (local/nodal/systemic failures) 8. Counting common iliac lymph nodes","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_emii_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Transform EMBRACE-II Data — process_emii_data","text":"","code":"if (FALSE) { # \\dontrun{   # Load raw data   raw_data <- load_combined_embrace()      # Process with common transformations   common_data <- process_combined_data(raw_data)      # Add EMBRACE-II specific transformations   processed_data <- process_emii_data(common_data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Follow-up Node Data — process_followup_nodes","title":"Process Follow-up Node Data — process_followup_nodes","text":"Internal helper function efficiently process follow-node data extracting transforming node information multiple follow-visits.","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Follow-up Node Data — process_followup_nodes","text":"","code":"process_followup_nodes(.data, diagnosis_nodes)"},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Follow-up Node Data — process_followup_nodes","text":".data data frame containing follow-node information diagnosis_nodes Lookup table nodes diagnosis","code":""},{"path":"https://steecker.github.io/embraceR/reference/process_followup_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Follow-up Node Data — process_followup_nodes","text":"tibble processed follow-node data","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"function converts columns factors recodes levels based provided mapping. can process specific column names columns common base names.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"","code":"recode_and_convert_all_columns(df, stop_on_missing_col = FALSE)"},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"df data frame containing columns recoded converted stop_on_missing_col Logical, TRUE, stops column missing; FALSE, skips missing columns (default: FALSE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"data frame specified columns recoded converted factors","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_all_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode and convert columns based on the mapping — recode_and_convert_all_columns","text":"","code":"if (FALSE) { # \\dontrun{   # Load data   data <- load_embrace_ii()      # Recode and convert all columns   recoded_data <- recode_and_convert_all_columns(data)      # Recode with strict checking   recoded_data <- recode_and_convert_all_columns(data, stop_on_missing_col = TRUE) } # }"},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode and convert a single column based on the mapping — recode_and_convert_column","title":"Recode and convert a single column based on the mapping — recode_and_convert_column","text":"Recode convert single column based mapping","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode and convert a single column based on the mapping — recode_and_convert_column","text":"","code":"recode_and_convert_column(df, col_name, mapping)"},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode and convert a single column based on the mapping — recode_and_convert_column","text":"df data frame containing column recoded col_name Character, name column recode mapping list containing old new levels column","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_and_convert_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode and convert a single column based on the mapping — recode_and_convert_column","text":"data frame specified column recoded converted factor","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"function takes data frame recodes factor levels multiple columns based supplied old new levels. designed used dplyr's mutate(across()) function.","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"","code":"recode_factor_levels(x, old_levels, new_levels)"},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"x factor vector data frame column old_levels character vector old factor levels new_levels character vector new factor levels","code":""},{"path":"https://steecker.github.io/embraceR/reference/recode_factor_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode factor levels for multiple columns in a data frame — recode_factor_levels","text":"factor vector recoded factor levels","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"Reorders columns dataframe chronologically based corresponding assessment dates, facilitating temporal analysis side effects.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"","code":"reorder_columns_based_on_date(df)"},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"df DataFrame columns reordered","code":""},{"path":"https://steecker.github.io/embraceR/reference/reorder_columns_based_on_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder Columns Based on Assessment Dates — reorder_columns_based_on_date","text":"DataFrame columns reordered chronologically","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"Replace Infinite values numeric columns NA","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"","code":"replace_infinite_with_NA(df)"},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"df data frame containing numeric columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_infinite_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Infinite values in numeric columns with NA — replace_infinite_with_NA","text":"data frame Infinite values numeric columns replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"Replace -1 values numeric columns NA","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"","code":"replace_neg_one_with_NA(df)"},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"df data frame containing numeric columns.","code":""},{"path":"https://steecker.github.io/embraceR/reference/replace_neg_one_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace -1 values in numeric columns with NA — replace_neg_one_with_NA","text":"data frame -1 values numeric columns replaced NA.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape Side Effects Data — reshape_side_effects","title":"Reshape Side Effects Data — reshape_side_effects","text":"Converts side effects data wide long format, separating side effect names time points.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape Side Effects Data — reshape_side_effects","text":"","code":"reshape_side_effects(df)"},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape Side Effects Data — reshape_side_effects","text":"df DataFrame, data reshaped.","code":""},{"path":"https://steecker.github.io/embraceR/reference/reshape_side_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape Side Effects Data — reshape_side_effects","text":"DataFrame long format separated side effect names time points.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"function saves given dataframe RDS XLSX formats. files saved folder named 'data', filenames include current date.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"","code":"save_embrace_data(df)"},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"df dataframe saved.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_embrace_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Dataframe to RDS and XLSX Formats — save_embrace_data","text":"","code":"if (FALSE) { # \\dontrun{   data <- data.frame(x = 1:5, y = 6:10)   save_embrace_data(data) } # }"},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","title":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","text":"Extracts processes subset EMBRACE data variables needed EviGuide analysis. function loads combined EMBRACE-EMBRACE-II data, selects relevant clinical dosimetric variables, applies factor conversions, saves result CSV file.","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","text":"","code":"save_eviguide_data(output_file = \"clean_eviguide_em_data.csv\", quote = TRUE)"},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","text":"output_file Character, path save CSV file (default: \"clean_eviguide_em_data.csv\") quote Logical, whether quote strings CSV output (default: TRUE)","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","text":"Invisibly returns processed data frame","code":""},{"path":"https://steecker.github.io/embraceR/reference/save_eviguide_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save EMBRACE Data for EviGuide Analysis — save_eviguide_data","text":"","code":"if (FALSE) { # \\dontrun{   # Save with default filename   save_eviguide_data()      # Save with custom filename   save_eviguide_data(\"my_eviguide_data.csv\") } # }"},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Threshold to CTCAE Grade — threshold","title":"Apply Threshold to CTCAE Grade — threshold","text":"Determines CTCAE grade value meets exceeds specified threshold.","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Threshold to CTCAE Grade — threshold","text":"","code":"threshold(x, grade_threshold)"},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Threshold to CTCAE Grade — threshold","text":"x Numeric, CTCAE grade value check grade_threshold Numeric, threshold value compare ","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Threshold to CTCAE Grade — threshold","text":"Logical, TRUE value equals threshold, otherwise FALSE","code":""},{"path":"https://steecker.github.io/embraceR/reference/threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Threshold to CTCAE Grade — threshold","text":"","code":"threshold(3, grade_threshold = 3)  # TRUE #> Error in threshold(3, grade_threshold = 3): could not find function \"threshold\" threshold(2, grade_threshold = 3)  # FALSE #> Error in threshold(2, grade_threshold = 3): could not find function \"threshold\" threshold(NA, grade_threshold = 3) # FALSE #> Error in threshold(NA, grade_threshold = 3): could not find function \"threshold\""},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"Transpose long-format sheet wide-format","code":""},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"","code":"transpose_sheet_to_wide(file_path, sheet_name, id_col, key_col)"},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"file_path path Excel file. sheet_name name sheet import. id_col column name contains unique identifiers. key_col column name become new columns wide format.","code":""},{"path":"https://steecker.github.io/embraceR/reference/transpose_sheet_to_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a long-format sheet to wide-format — transpose_sheet_to_wide","text":"tibble wide format.","code":""},{"path":"https://steecker.github.io/embraceR/reference/update_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Record and Log Changes — update_record","title":"Update Record and Log Changes — update_record","text":"Updates specific field value record logs change change log file.","code":""},{"path":"https://steecker.github.io/embraceR/reference/update_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Record and Log Changes — update_record","text":"","code":"update_record(data, log, record_id, field, new_value, reason)"},{"path":"https://steecker.github.io/embraceR/reference/update_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Record and Log Changes — update_record","text":"data data frame containing records update log data frame containing change log record_id ID record update (embrace_id) field field name update new_value new value set reason reason making change","code":""},{"path":"https://steecker.github.io/embraceR/reference/update_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Record and Log Changes — update_record","text":"updated change log data frame new entry","code":""},{"path":"https://steecker.github.io/embraceR/reference/update_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Record and Log Changes — update_record","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame(embrace_id = c(\"001\", \"002\"), value = c(10, 20)) log <- data.frame(ChangeID = integer(), RecordID = character(),                  Field = character(), OldValue = character(),                  NewValue = character(), ChangeDate = as.Date(character()),                  Reason = character()) log <- update_record(data, log, \"001\", \"value\", 15, \"Correction\") } # }"}]
